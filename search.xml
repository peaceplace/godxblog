<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Debian10.x配置DHCP服务</title>
      <link href="/48486.html"/>
      <url>/48486.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>Client: 网卡1 系统：debian10</p><p>Server：<br>    三网卡IP: 10.10.100.254<br>          IP: 172.16.100.254<br>          IP：192.16.100.254  </p><h2 id="实施步骤"><a href="#实施步骤" class="headerlink" title="实施步骤"></a>实施步骤</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y isc-dhcp-server</span><br></pre></td></tr></table></figure><h3 id="设置监听网卡"><a href="#设置监听网卡" class="headerlink" title="设置监听网卡"></a>设置监听网卡</h3><blockquote><p>如果是三网卡或者多网卡的情况下，请选择你要下发IP的网卡</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/defaults/isc-dhcp-server</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/img_convert/5909083fdeceb1d03e1909a78af7e110.png"></p><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>配置格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">subnet *$&#123;子网:10.10.100.0&#125;* netmask *$&#123;子网掩码:255.255.255.0&#125;*&#123;</span><br><span class="line">range *$&#123;开始IP:10.10.100.1&#125; $&#123;10.10.100.50&#125;*;</span><br><span class="line">option subnet-mask *$&#123;子网掩码:255.255.255.0&#125;*;</span><br><span class="line">option routers *$&#123;网关地址:10.10.100.2&#125;*;</span><br><span class="line">option domain-name &quot;*$&#123;域名：dhcp.com&#125;*&quot;;</span><br><span class="line">option domain-name-servers *$&#123;DNS服务器IP地址：114.114.114.114&#125;*;</span><br><span class="line">default-lease-time 3600;</span><br><span class="line">max-lease-time 7200;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/img_convert/367cf2ed0e49ff23d923f2900a4ac48a.png"></p><h3 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart isc-dhcp-server</span><br></pre></td></tr></table></figure><h3 id="Client网卡修改"><a href="#Client网卡修改" class="headerlink" title="Client网卡修改"></a>Client网卡修改</h3><p>将网卡设置为dhcp模式并重启网络服务</p><p><img src="https://img-blog.csdnimg.cn/img_convert/963ca331f3fb043512301155a2ef64b2.png"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DHCP </tag>
            
            <tag> 高职院校技能大赛 </tag>
            
            <tag> debian </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Debian10.x配置NFS</title>
      <link href="/57123.html"/>
      <url>/57123.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="技术简介"><a href="#技术简介" class="headerlink" title="技术简介"></a>技术简介</h2><p>NFS（网络文件系统）服务可以将远程Linux系统上的文件共享资源挂载到本地主机的目录上，从而使得本地主机（Linux客户端）基于TCP/IP协议，像使用本地主机上的资源那样读写远程Linux系统上的共享文件</p><h2 id="实施方法"><a href="#实施方法" class="headerlink" title="实施方法"></a>实施方法</h2><blockquote><p>假设企业需求:</p><blockquote><p>• 共享/data/share目录；<br>  • 用于存储server01主机的web数据；<br>  • 仅允许service网段访问该共享。</p></blockquote></blockquote><h2 id="配置方法"><a href="#配置方法" class="headerlink" title="配置方法"></a>配置方法</h2><p>环境： server01 （debian 10.x） IP： 172.16.100.201<br>共享目录： /data/share<br>service网段： 172.16.100.128/25</p><h3 id="创建文件"><a href="#创建文件" class="headerlink" title="创建文件"></a>创建文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /data/share</span><br></pre></td></tr></table></figure><h3 id="安装nfs工具"><a href="#安装nfs工具" class="headerlink" title="安装nfs工具"></a>安装nfs工具</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y nfs*</span><br></pre></td></tr></table></figure><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>配置文件位置： /etc/exports</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;/data/share   172.16.100.128/25(rw,sync,root_squash)&quot; &gt;&gt; /etc/exports</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/img_convert/6eef87ef06deba7fdce4f9a38aa12949.png"></p><center><strong>用于配置NFS服务程序配置文件的参数</strong></center>  <table><thead><tr><th align="center">参数</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">ro</td><td align="center">只读</td></tr><tr><td align="center">rw</td><td align="center">读写</td></tr><tr><td align="center">root_squash</td><td align="center">当NFS客户端以root管理员访问时，映射为NFS服务器的匿名用户</td></tr><tr><td align="center">no_root_squash</td><td align="center">当NFS客户端以root管理员访问时，映射为NFS服务器的root管理员</td></tr><tr><td align="center">all_squash</td><td align="center">无论NFS客户端使用什么账户访问，均映射为NFS服务器的匿名用户</td></tr><tr><td align="center">sync</td><td align="center">同时将数据写入到内存与硬盘中，保证不丢失数据</td></tr><tr><td align="center">async</td><td align="center">优先将数据保存到内存，然后再写入硬盘；这样效率更高，但可能会丢失数据</td></tr></tbody></table><h3 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart nfs-server</span><br></pre></td></tr></table></figure><h3 id="在service网段内的服务器进行测试"><a href="#在service网段内的服务器进行测试" class="headerlink" title="在service网段内的服务器进行测试"></a>在service网段内的服务器进行测试</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">showmount -e 172.16.100.201</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/img_convert/f4943c605ac5f096d9efd294d51cfcc7.png"></p><h3 id="挂载共享文件"><a href="#挂载共享文件" class="headerlink" title="挂载共享文件"></a>挂载共享文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /data/web</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;172.168.100.201:/data/share /data/web nfs defaults 0 0&quot; &gt;&gt; /etc/fstab</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -a</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高职院校技能大赛 </tag>
            
            <tag> debian </tag>
            
            <tag> NFS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Debian10.x搭建Raid5磁盘阵列</title>
      <link href="/41387.html"/>
      <url>/41387.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="技术简介"><a href="#技术简介" class="headerlink" title="技术简介"></a>技术简介</h2><p>RAID5技术是把硬盘设备的数据奇偶校验信息保存到其他硬盘设备中。RAID 5磁盘阵列组中数据的奇偶校验信息并不是单独保存到某一块硬盘设备中，而是存储到除自身以外的其他每一块硬盘设备上，这样的好处是其中任何一设备损坏后不至于出现致命缺陷；换句话说，就是RAID 5技术实际上没有备份硬盘中的真实数据信息，而是当硬盘设备出现问题后通过奇偶校验信息来尝试重建损坏的数据。RAID这样的技术特性“妥协”地兼顾了硬盘设备的读写速度、数据安全性与存储成本问题</p><h2 id="实施方法"><a href="#实施方法" class="headerlink" title="实施方法"></a>实施方法</h2><blockquote><p>假设企业需求:</p><blockquote><p>•    在虚拟机上添加 4 个 1G 的硬盘；<br>• 创建 raid5，其中一个作为热备盘, 设备名为md0;<br>• 将 md0 设置为 LVM，设备为/dev/vg01/lv01；<br>• 格式化为 ext4 文件系统;<br>• 开机自动挂载到/data 目录</p></blockquote></blockquote><h3 id="环境创建"><a href="#环境创建" class="headerlink" title="环境创建"></a>环境创建</h3><h4 id="虚拟机上添加四块1G硬盘"><a href="#虚拟机上添加四块1G硬盘" class="headerlink" title="虚拟机上添加四块1G硬盘"></a>虚拟机上添加四块1G硬盘</h4><p><img src="https://img-blog.csdnimg.cn/img_convert/1fdd2f312ca7425da2902964d2bb156c.png"></p><h4 id="在系统上查看硬盘是否存在以及对应硬盘名"><a href="#在系统上查看硬盘是否存在以及对应硬盘名" class="headerlink" title="在系统上查看硬盘是否存在以及对应硬盘名"></a>在系统上查看硬盘是否存在以及对应硬盘名</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@Server01:~# lsblk</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/img_convert/54431d1e0a9f637641a7b9b8be81b1d4.png"></p><h4 id="安装mdadm"><a href="#安装mdadm" class="headerlink" title="安装mdadm"></a>安装mdadm</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@Server01:~# apt install -y mdadm</span><br></pre></td></tr></table></figure><h4 id="使用mdadm命令创建raid5"><a href="#使用mdadm命令创建raid5" class="headerlink" title="使用mdadm命令创建raid5"></a>使用mdadm命令创建raid5</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@Server01:~# mdadm -Cv /dev/md0 -n 3 -l 5 -x 1 /dev/sd[b-e]</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/img_convert/780aaf0146bd51a0150997781e33159b.png"></p><center><strong>mdadm命令的常用参数和作用</strong></center>  <table><thead><tr><th align="center">参数</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">-a</td><td align="center">检测设备名称</td></tr><tr><td align="center">-n</td><td align="center">指定设备数量</td></tr><tr><td align="center">-l</td><td align="center">指定RAID级别</td></tr><tr><td align="center">-C</td><td align="center">创建</td></tr><tr><td align="center">-v</td><td align="center">显示过程</td></tr><tr><td align="center">-f</td><td align="center">模拟设备损坏</td></tr><tr><td align="center">-r</td><td align="center">移除设备</td></tr><tr><td align="center">-Q</td><td align="center">查看摘要信息</td></tr><tr><td align="center">-D</td><td align="center">查看详细信息</td></tr><tr><td align="center">-S</td><td align="center">停止RAID磁盘阵列</td></tr></tbody></table><blockquote><p>根据常用参数解释命令则为：创建/dev/md0阵列卡并显示过程，其中等级为5，硬盘数为3，热备盘数为1，硬盘设备为：/dev/sdb,sdc,sdd,sde</p></blockquote><h4 id="将md0设置为lvm（逻辑卷管理器）"><a href="#将md0设置为lvm（逻辑卷管理器）" class="headerlink" title="将md0设置为lvm（逻辑卷管理器）"></a>将md0设置为lvm（逻辑卷管理器）</h4><ul><li><p>首先安装lvm工具： <code>apt install -y lvm*</code></p></li><li><p>添加硬盘使其支持LVM技术：<code>pvcreate /dev/md0</code></p></li></ul><p><img src="https://img-blog.csdnimg.cn/img_convert/84f1aff1958013599aa6dababe3a741e.png"></p><ul><li>将硬盘设备添加进vg01卷组：<code>vgcreate vg01 /dev/md0</code></li></ul><p><img src="https://img-blog.csdnimg.cn/img_convert/c018d630ea8db8552b973c0167712a67.png"></p><ul><li>切割逻辑卷设备，没要求大小则此处设置为1G： <code>lvcreate -n lv01 -L 1G vg01</code></li></ul><p><img src="https://img-blog.csdnimg.cn/img_convert/01537136ee0ea0339a14e140c625bb16.png"></p><ul><li>查看是否成功创建： <code>lvdisplay</code></li></ul><p><img src="https://img-blog.csdnimg.cn/img_convert/97f60a8d29c182e011ec3584b0350932.png"></p><h4 id="格式化磁盘为ext4格式"><a href="#格式化磁盘为ext4格式" class="headerlink" title="格式化磁盘为ext4格式"></a>格式化磁盘为ext4格式</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@Server01:~# mkfs.ext4 /dev/vg01/lv01</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/img_convert/3559a94d6714328f3efebb1d644ef7d5.png"></p><h4 id="挂载磁盘分区到-data目录"><a href="#挂载磁盘分区到-data目录" class="headerlink" title="挂载磁盘分区到/data目录"></a>挂载磁盘分区到/data目录</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@Server01:~# mkdir /data</span><br><span class="line">root@Server01:~#  echo “/dev/vg01/lv01 /data ext4 defaults 0 0” &gt;&gt; /etc/fstab</span><br><span class="line">root@Server01:~# mount -a</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/img_convert/c15c43574ae2bcec44208d529a18c7e3.png"></p><h4 id="查看是否挂载成功"><a href="#查看是否挂载成功" class="headerlink" title="查看是否挂载成功"></a>查看是否挂载成功</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@Server01:~# df -Th</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/img_convert/fa80e6e80cfdd9840c97209b97d3b904.png"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高职院校技能大赛 </tag>
            
            <tag> debian </tag>
            
            <tag> Raid5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Debian10.x配置本地APT源</title>
      <link href="/27421.html"/>
      <url>/27421.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这是个坑！是个大坑！ 如果在配置debian10本地源的时候，直接使用<code>apt-cdrom add</code>命令创建本地源后，在安装软件的时候会有很大几率找不到软件包的位置然后报错。</p><blockquote><p>报错:  E: The repository ‘XXX’ does not have a Relase file.</p></blockquote><p>接下来讲解另一种办法</p><h2 id="使用第二种创建本地源方法来安装离线软件包"><a href="#使用第二种创建本地源方法来安装离线软件包" class="headerlink" title="使用第二种创建本地源方法来安装离线软件包"></a>使用第二种创建本地源方法来安装离线软件包</h2><h3 id="首先需添加剩余debian的ISO文件"><a href="#首先需添加剩余debian的ISO文件" class="headerlink" title="首先需添加剩余debian的ISO文件"></a>首先需添加剩余debian的ISO文件</h3><p><img src="https://img-blog.csdnimg.cn/img_convert/9a4957772b028c5d60f743270ac406c9.png" alt="在虚拟机里再添加两个DVD设备然后挂载好ISO即可"></p><blockquote><p>注意：建议关机进行！</p></blockquote><h3 id="查看是否挂载到系统上"><a href="#查看是否挂载到系统上" class="headerlink" title="查看是否挂载到系统上"></a>查看是否挂载到系统上</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@debian:~# df -Th</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/img_convert/5e3122f0645d913090831ff046a6b6ce.png" alt="查看挂载"></p><p>记住<code>/dev/sr0 sr1 sr2</code>地址，待会儿会用上</p><h3 id="创建挂载目录"><a href="#创建挂载目录" class="headerlink" title="创建挂载目录"></a>创建挂载目录</h3><p>首先先进入<code>/media</code>目录里查看存在哪些文件夹</p><p><img src="https://img-blog.csdnimg.cn/img_convert/c0e6aa84210e3e1082f1cdd078a6559d.png"></p><p>一般情况下存在<code>cdrom和cdrom0</code>两个文件夹，那么为了方便管理，那就再创建两个文件夹，分别是<code>cdrom1</code>和<code>cdrom2</code>来挂在2和3的ISO</p><h3 id="设置开机自动挂载"><a href="#设置开机自动挂载" class="headerlink" title="设置开机自动挂载"></a>设置开机自动挂载</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@debian:~# echo &quot;/dev/sr0 /media/cdrom0 iso9660 defaults 0 0&quot; &gt;&gt; /etc/fstab</span><br><span class="line">root@debian:~# echo &quot;/dev/sr1 /media/cdrom1 iso9660 defaults 0 0&quot; &gt;&gt; /etc/fstab</span><br><span class="line">root@debian:~# echo &quot;/dev/sr2 /media/cdrom2 iso9660 defaults 0 0&quot; &gt;&gt; /etc/fstab</span><br></pre></td></tr></table></figure><p>设置完开机挂载后输入<code>mount -a</code>自动挂载<code>/etc/fstab</code>里的东西</p><p><img src="https://img-blog.csdnimg.cn/img_convert/c6af72db2910efaa4897cb3a97c245da.png"></p><h3 id="挂载完成后修改sources-list文件"><a href="#挂载完成后修改sources-list文件" class="headerlink" title="挂载完成后修改sources.list文件"></a>挂载完成后修改<code>sources.list</code>文件</h3><p>在文件添加以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">deb [trusted=yes] file:/media/cdrom0 buster contrib main</span><br><span class="line">deb [trusted=yes] file:/media/cdrom1 buster contrib main</span><br><span class="line">deb [trusted=yes] file:/media/cdrom2 buster contrib main</span><br></pre></td></tr></table></figure><blockquote><p>挂载点软件源写法<br><code>deb [trusted=yes] file:/media/cdrom/ buster contrib main</code></p><blockquote><p>其中 /media/cdrom0 cdrom1 cdrom2 为上一步挂载点，路径后面的 buster contrib main 可参照 apt-cdrom add 自动生成的信息填写，<code>[trusted=yes]</code> 告诉 APT 该源是可信的</p></blockquote></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/ba224b649d914d654ab1f0ee8620ca97.png"></p><h3 id="检查是否成功"><a href="#检查是否成功" class="headerlink" title="检查是否成功"></a>检查是否成功</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br></pre></td></tr></table></figure><blockquote><p>如果没有出现找不到什么什么文件之类的错误就证明成功</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高职院校技能大赛 </tag>
            
            <tag> debian </tag>
            
            <tag> 本地源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openstack常用运维命令整合</title>
      <link href="/18251.html"/>
      <url>/18251.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="通用命令"><a href="#通用命令" class="headerlink" title="通用命令"></a>通用命令</h2><h3 id="更改环境变量"><a href="#更改环境变量" class="headerlink" title="更改环境变量"></a>更改环境变量</h3><p><code>sorece /etc/keystone/admin-openrc.sh</code></p><h2 id="Keystone"><a href="#Keystone" class="headerlink" title="Keystone"></a>Keystone</h2><h3 id="创建用户-名称：aaa-密码：123-邮箱：-97-97-97-64-113-x71-x2e-x63-x6f-109"><a href="#创建用户-名称：aaa-密码：123-邮箱：-97-97-97-64-113-x71-x2e-x63-x6f-109" class="headerlink" title="创建用户(名称：aaa   密码：123  邮箱：&#97;&#97;&#97;&#64;&#113;&#x71;&#x2e;&#x63;&#x6f;&#109;)"></a>创建用户(名称：aaa   密码：123  邮箱：<a href="mailto:&#97;&#97;&#97;&#64;&#113;&#x71;&#x2e;&#x63;&#x6f;&#109;">&#97;&#97;&#97;&#64;&#113;&#x71;&#x2e;&#x63;&#x6f;&#109;</a>)</h3><p><code>openstack user create --password 123 --email aaa@qq.com --domain demo aaa</code></p><ul><li>命令格式：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ openstack user create [--domain &lt;domain&gt;]</span><br><span class="line">                        [--password &lt;password&gt;]</span><br><span class="line">                        [--email &lt;email-add&gt;]</span><br><span class="line">                        [--enable | --disable ]</span><br><span class="line">                        &lt;name&gt;</span><br></pre></td></tr></table></figure><h3 id="创建项目-名称：aaa1"><a href="#创建项目-名称：aaa1" class="headerlink" title="创建项目(名称：aaa1)"></a>创建项目(名称：aaa1)</h3><p><code>openstack project create --domain demo aaa1</code></p><ul><li>命令格式：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ openstack project create [--domain &lt;domain&gt;]</span><br><span class="line">   [--description &lt;description&gt;]</span><br><span class="line">   [--enable / --disable]</span><br><span class="line">   &lt;project-name&gt;</span><br></pre></td></tr></table></figure><h3 id="创建角色-名称：com"><a href="#创建角色-名称：com" class="headerlink" title="创建角色(名称：com)"></a>创建角色(名称：com)</h3><p><code>openstack role create com</code></p><ul><li>命令格式：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ openstack role create &lt;name&gt;</span><br></pre></td></tr></table></figure><h3 id="绑定用户-项目权限-使aaa分配aaa1项目下的com角色"><a href="#绑定用户-项目权限-使aaa分配aaa1项目下的com角色" class="headerlink" title="绑定用户+项目权限(使aaa分配aaa1项目下的com角色)"></a>绑定用户+项目权限(使aaa分配aaa1项目下的com角色)</h3><p><code>openstack role add --user aaa --project aaa1 com</code></p><ul><li>命令格式：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ openstack role add --user &lt;user&gt; --project &lt;project-name&gt; &lt;role&gt;</span><br></pre></td></tr></table></figure><h3 id="查看域"><a href="#查看域" class="headerlink" title="查看域"></a>查看域</h3><p><code>openstack domain list</code></p><h3 id="查看所有用户信息"><a href="#查看所有用户信息" class="headerlink" title="查看所有用户信息"></a>查看所有用户信息</h3><p><code>openstack user show &lt;user&gt;</code></p><h3 id="项目列表查询"><a href="#项目列表查询" class="headerlink" title="项目列表查询"></a>项目列表查询</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ALL：openstack project list</span><br><span class="line">SOLE：openstack peoject show &lt;projext-name&gt;</span><br></pre></td></tr></table></figure><h3 id="角色列表查询"><a href="#角色列表查询" class="headerlink" title="角色列表查询"></a>角色列表查询</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ALL：openstack role list</span><br><span class="line">SOLE：openstack role show &lt;role&gt;</span><br></pre></td></tr></table></figure><h3 id="端点地址查询"><a href="#端点地址查询" class="headerlink" title="端点地址查询"></a>端点地址查询</h3><p><code>openstack endpoint list</code></p><h3 id="获取token令牌"><a href="#获取token令牌" class="headerlink" title="获取token令牌"></a>获取token令牌</h3><p><code>openstack token issue</code></p><h3 id="开关用户"><a href="#开关用户" class="headerlink" title="开关用户"></a>开关用户</h3><p><code>openstack user set &lt;--enable | --disable &gt; &lt;user&gt;</code></p><h2 id="Glance"><a href="#Glance" class="headerlink" title="Glance"></a>Glance</h2><h3 id="创建镜像-名称：cirros-镜像：Centos-iaas-iso"><a href="#创建镜像-名称：cirros-镜像：Centos-iaas-iso" class="headerlink" title="创建镜像(名称：cirros 镜像：Centos-iaas.iso)"></a>创建镜像(名称：cirros 镜像：Centos-iaas.iso)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">glance image-create --name &quot;cirros&quot; --disk-format qcow2 --container bare --profress Centos-iaas.iso</span><br></pre></td></tr></table></figure><h3 id="查询镜像列表"><a href="#查询镜像列表" class="headerlink" title="查询镜像列表"></a>查询镜像列表</h3><p><code>glance image-list</code></p><h3 id="查询镜像详细信息"><a href="#查询镜像详细信息" class="headerlink" title="查询镜像详细信息"></a>查询镜像详细信息</h3><p><code>glance image-show &lt;image-ID&gt;</code></p><h3 id="更新镜像信息"><a href="#更新镜像信息" class="headerlink" title="更新镜像信息"></a>更新镜像信息</h3><p><code>glance image-update --min-disk=1 &lt;image-ID&gt;</code></p><h3 id="删除镜像"><a href="#删除镜像" class="headerlink" title="删除镜像"></a>删除镜像</h3><p><code>glance image-delete &lt;image-ID&gt;</code></p><h2 id="Nova"><a href="#Nova" class="headerlink" title="Nova"></a>Nova</h2><h3 id="创建安全组"><a href="#创建安全组" class="headerlink" title="创建安全组"></a>创建安全组</h3><p><code>openstack security group create test --description &#39;&lt;描述&gt;&#39;</code></p><h3 id="创建虚拟机类型"><a href="#创建虚拟机类型" class="headerlink" title="创建虚拟机类型"></a>创建虚拟机类型</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nova flavor-create test 6 2048 20 2</span><br><span class="line">[name][id][ram][rom][vcpu]</span><br></pre></td></tr></table></figure><h3 id="查看云主机类型详细信息"><a href="#查看云主机类型详细信息" class="headerlink" title="查看云主机类型详细信息"></a>查看云主机类型详细信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nova flavor-show &lt;name&gt;</span><br></pre></td></tr></table></figure><h2 id="Neutron"><a href="#Neutron" class="headerlink" title="Neutron"></a>Neutron</h2><h3 id="查询列表信息"><a href="#查询列表信息" class="headerlink" title="查询列表信息"></a>查询列表信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">neutron agent-list -c binary</span><br></pre></td></tr></table></figure><h3 id="查询网络信息"><a href="#查询网络信息" class="headerlink" title="查询网络信息"></a>查询网络信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ALL：neutron net-list</span><br><span class="line">SOLE：neutron net-show &lt;ID&gt;</span><br></pre></td></tr></table></figure><h3 id="查看网络服务信息"><a href="#查看网络服务信息" class="headerlink" title="查看网络服务信息"></a>查看网络服务信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ALL：neutron agent-list</span><br><span class="line">SOLE：neutron agent-show &lt;ID&gt;</span><br></pre></td></tr></table></figure><h3 id="查看子网信息"><a href="#查看子网信息" class="headerlink" title="查看子网信息"></a>查看子网信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ALL：neutron subnet-list</span><br><span class="line">SOLE：neutron subnet-show &lt;ID&gt;</span><br></pre></td></tr></table></figure><h2 id="Cinder"><a href="#Cinder" class="headerlink" title="Cinder"></a>Cinder</h2><h3 id="创建云硬盘-名称-ext-demo-云硬盘-2G"><a href="#创建云硬盘-名称-ext-demo-云硬盘-2G" class="headerlink" title="创建云硬盘(名称:ext-demo 云硬盘:2G)"></a>创建云硬盘(名称:ext-demo 云硬盘:2G)</h3><p><code>cinder create --name ext-demo 2</code></p><h3 id="查看云硬盘信息"><a href="#查看云硬盘信息" class="headerlink" title="查看云硬盘信息"></a>查看云硬盘信息</h3><p><code>cinder list</code></p><h3 id="创建云硬盘卷类型"><a href="#创建云硬盘卷类型" class="headerlink" title="创建云硬盘卷类型"></a>创建云硬盘卷类型</h3><p><code>cinder type-create lvm</code></p><h3 id="查看云硬盘现有类型"><a href="#查看云硬盘现有类型" class="headerlink" title="查看云硬盘现有类型"></a>查看云硬盘现有类型</h3><p><code>cinder type-list</code></p><h3 id="创建带标识的云硬盘"><a href="#创建带标识的云硬盘" class="headerlink" title="创建带标识的云硬盘"></a>创建带标识的云硬盘</h3><p><code>cinder create --name type_test_demo --volume-type lvm 1</code></p><h3 id="查看指定云硬盘"><a href="#查看指定云硬盘" class="headerlink" title="查看指定云硬盘"></a>查看指定云硬盘</h3><p><code>cinder show &lt;name&gt;</code></p><h3 id="删除指定云硬盘"><a href="#删除指定云硬盘" class="headerlink" title="删除指定云硬盘"></a>删除指定云硬盘</h3><p><code>cinder delete &lt;name&gt;</code></p><h2 id="Swift"><a href="#Swift" class="headerlink" title="Swift"></a>Swift</h2><h3 id="创建容器"><a href="#创建容器" class="headerlink" title="创建容器"></a>创建容器</h3><p><code>swift post test</code></p><h3 id="上传文件至容器"><a href="#上传文件至容器" class="headerlink" title="上传文件至容器"></a>上传文件至容器</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">swift upload test/file one.txt</span><br><span class="line">swift upload test file/</span><br></pre></td></tr></table></figure><h3 id="从容器中下载文件"><a href="#从容器中下载文件" class="headerlink" title="从容器中下载文件"></a>从容器中下载文件</h3><p><code>swift download test file/three.png</code></p><h3 id="从容器中删除文件"><a href="#从容器中删除文件" class="headerlink" title="从容器中删除文件"></a>从容器中删除文件</h3><p><code>swift delete test file/three.png</code></p><h3 id="查看整个Account账户下的swift状态"><a href="#查看整个Account账户下的swift状态" class="headerlink" title="查看整个Account账户下的swift状态"></a>查看整个Account账户下的swift状态</h3><p><code>swift stat</code></p><h3 id="查看所能查询的系统服务"><a href="#查看所能查询的系统服务" class="headerlink" title="查看所能查询的系统服务"></a>查看所能查询的系统服务</h3><p><code>openstack-server status</code></p><div class="note success modern"><p>总结完毕<del>~</del></p></div>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> kubernets </tag>
            
            <tag> 云计算 </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021新年快乐！！</title>
      <link href="/28218.html"/>
      <url>/28218.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="再见2020"><a href="#再见2020" class="headerlink" title="再见2020"></a>再见2020</h2><h2 id="你好2021"><a href="#你好2021" class="headerlink" title="你好2021"></a>你好2021</h2><p><img src="https://cdn.peacecity.cn/img/20210101144450.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>红帽挑战赛复赛试题分析</title>
      <link href="/52799.html"/>
      <url>/52799.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>几个星期前参加了个红帽挑战赛，在此之前博主我从来没参加过关于技能方面的比赛，比赛总共分为初赛——复赛——决赛，初赛和复赛都是由红帽官方指定的培训机构进行命题和考试，这次初赛四川赛区使用了笔试，考题都是些很基础的linux系统的命令，很幸运的是我成功的通过了初赛进入到了复赛，复赛采用上机实操，下面我将这次复赛试题进行总结</p><blockquote><p>开始刷题！</p></blockquote><h2 id="试题内容"><a href="#试题内容" class="headerlink" title="试题内容"></a>试题内容</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><p><img src="https://cdn.peacecity.cn/img/20201219180113.png" alt="第一题"></p><p>这题就考察了一个软件源的配置，下面是配置过程：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@system2 ~]# vi /etc/yum.repos.d/yum.repo</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[BaseOS]</span><br><span class="line">name=BaseOS</span><br><span class="line">baseurl=ftp://192.168.1.1/pub/rhel8.0/BaseOS</span><br><span class="line">gpgcheck=0</span><br><span class="line">[Appstream]</span><br><span class="line">name=Appstream</span><br><span class="line">baseurl=ftp://192.168.1.1/pub/rhel8.0/AppStream</span><br><span class="line">gpgcheck=0</span><br></pre></td></tr></table></figure><p><img src="https://cdn.peacecity.cn/img/20201219212914.png" alt="进入yum源配置文件新建一个repo文件"><br><img src="https://cdn.peacecity.cn/img/20201219212952.png" alt="编辑repo文件内容"></p><p>此题主要的关键点就是<code>gpgcheck=0</code></p><h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><p><img src="https://cdn.peacecity.cn/img/20201219213634.png" alt="第二题"></p><p>第二题考察创建和管理用户，主要命令没有很多，但无权限访问交互式shell需要更改<code>/etc/passwd</code>配置文件,下面是配置过程：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@system2 ~]# groupadd yinhe</span><br><span class="line">[root@system2 ~]# useradd natasha;useradd harry;useradd sarah</span><br><span class="line">[root@system2 ~]# usermod -G yinhe natasha</span><br><span class="line">[root@system2 ~]# usermod -G yinhe harry</span><br><span class="line">[root@system2 ~]# id natasha</span><br><span class="line">uid=1001(natasha) gid=1002(natasha) groups=1002(natasha),1001(yinhe)</span><br><span class="line">[root@system2 ~]# id harry</span><br><span class="line">uid=1002(harry) gid=1003(harry) groups=1003(harry),1001(yinhe)</span><br><span class="line">[root@system2 ~]# echo &quot;yinhe123&quot; | passwd --stdin natasha</span><br><span class="line">Changing password for user natasha.</span><br><span class="line">passwd: all authentication tokens updated successfully.</span><br><span class="line">[root@system2 ~]# echo &quot;yinhe123&quot; | passwd --stdin harry</span><br><span class="line">Changing password for user harry.</span><br><span class="line">passwd: all authentication tokens updated successfully.</span><br><span class="line">[root@system2 ~]# echo &quot;yinhe123&quot; | passwd --stdin sarah</span><br><span class="line">Changing password for user sarah.</span><br><span class="line">passwd: all authentication tokens updated successfully.</span><br><span class="line">[root@system2 ~]# vim /etc/passwd</span><br></pre></td></tr></table></figure><p><img src="https://cdn.peacecity.cn/img/20201219215649.png"></p><p><img src="https://cdn.peacecity.cn/img/20201219215713.png"></p><p>更改<code>/etc/passwd</code>中sarah用户那行的内容后面将<code>/bin/bash</code>改为<code>/sbin/nologin</code></p><p><img src="https://cdn.peacecity.cn/img/20201219215508.png" alt="更改配置文件"></p><h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><p><img src="https://cdn.peacecity.cn/img/20201219215851.png" alt="第三题"></p><p>这题考察计划周期性用户作业就一条命令</p><p><img src="https://cdn.peacecity.cn/img/20201219220427.png" alt="具体配置如图"></p><p>配置周期性作业的时间顺序为： 分时日月星期</p><h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><p><img src="https://cdn.peacecity.cn/img/20201220105204.png" alt="第四题"></p><p>第四题考察用户与文件和目录的权限更改，具体配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@system2 ~]# mkdir /home/doc</span><br><span class="line">[root@system2 ~]# chown :yinhe /home/doc/</span><br><span class="line">[root@system2 ~]# chmod 770 /home/doc/</span><br><span class="line">[root@system2 ~]# ls -dl /home/doc/</span><br><span class="line">drwxrwx---. 2 root yinhe 6 Dec 19 21:53 /home/doc/</span><br><span class="line">[root@system2 ~]# chmod g+s /home/doc/</span><br><span class="line">[root@system2 ~]# ls -dl /home/doc/</span><br><span class="line">drwxrws---. 2 root yinhe 6 Dec 19 21:53 /home/doc/</span><br></pre></td></tr></table></figure><p>测试是否正确</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@system2 ~]# cd /home/doc/</span><br><span class="line">[root@system2 doc]# touch 123</span><br><span class="line">[root@system2 doc]# ll 123</span><br><span class="line">-rw-r--r--. 1 root yinhe 0 Dec 19 21:57 123</span><br></pre></td></tr></table></figure><p>创建目录： <code>mkdir 目录名</code></p><p>更改文件所属组： <code>chown :属组名  目录名或文件名</code></p><p>增加或删除权限： <code>chmod  +-[r,w,x] 目录或文件名</code><br>                <code>chmod  数字(r:4 w:2 x:1) 目录或文件名</code></p><p>增加特殊权限： <code>chmod g+-s 目录或文件</code></p><p><img src="https://cdn.peacecity.cn/img/20201220110446.png" alt="配置"></p><p><img src="https://cdn.peacecity.cn/img/20201220110504.png" alt="检查"></p><h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><p><img src="https://cdn.peacecity.cn/img/20201220112638.png" alt="第五题"></p><p>此题考察配置时间服务器，需要修改chrony的配置文件，具体配置如下：（若没安装需安装NTP）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@system2 ~]# vim /etc/chrony.conf </span><br></pre></td></tr></table></figure><p><img src="https://cdn.peacecity.cn/img/20201220113102.png" alt="在配置文件里将pool这一行前面加上注释，在起一行添加内容"></p><p>wq!保存完毕后,重启服务并查看配置是否正确</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@system2 ~]# systemctl restart chronyd</span><br><span class="line">[root@system2 ~]# systemctl enable chronyd</span><br><span class="line">[root@system2 ~]# chronyc sources -v</span><br></pre></td></tr></table></figure><p><img src="https://cdn.peacecity.cn/img/20201220113319.png" alt="此处为演示无法列出服务器列表"></p><h3 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h3><p><img src="https://cdn.peacecity.cn/img/20201220113431.png" alt="第六题"></p><p>第六题为配置web服务器，配置如下：</p><ul><li>首先需安装httpd</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@system2 ~]# yum install -y httpd</span><br></pre></td></tr></table></figure><p><img src="https://cdn.peacecity.cn/img/20201220113842.png" alt="安装成功画面"></p><ul><li>修改SElinux状态</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@system2 ~]# setenforce 0</span><br><span class="line">[root@system2 ~]# getenforce </span><br><span class="line">Permissive</span><br><span class="line">[root@system2 ~]# </span><br></pre></td></tr></table></figure><ul><li>防火墙开放http服务</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@system2 ~]# firewall-cmd --permanent --add-service=http</span><br><span class="line">success</span><br><span class="line">[root@system2 ~]# firewall-cmd --reload </span><br><span class="line">success</span><br><span class="line">[root@system2 ~]# firewall-cmd --list-all</span><br><span class="line">public (active)</span><br><span class="line">  target: default</span><br><span class="line">  icmp-block-inversion: no</span><br><span class="line">  interfaces: ens160</span><br><span class="line">  sources: </span><br><span class="line">  services: cockpit dhcpv6-client http ssh</span><br><span class="line">  ports: </span><br><span class="line">  protocols: </span><br><span class="line">  masquerade: no</span><br><span class="line">  forward-ports: </span><br><span class="line">  source-ports: </span><br><span class="line">  icmp-blocks: </span><br><span class="line">  rich rules: </span><br></pre></td></tr></table></figure><p><img src="https://cdn.peacecity.cn/img/20201220114339.png" alt="查看列表http则为成功"></p><ul><li>添加Apache服务器配置文件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@system2 ~]# hostname</span><br><span class="line">system2.example.com</span><br><span class="line">[root@system2 ~]# vim /etc/httpd/conf.d/web.conf</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;Virtualhost *:80&gt;</span><br><span class="line">        ServerName server0.example.com //这里为你服务器的fqdn名（域名）</span><br><span class="line">        DocumentRoot /var/www/html　 //这里为存放网站的文件夹目录</span><br><span class="line">&lt;/Virtualhost&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.peacecity.cn/img/20201220114848.png" alt="根据题目适当更改"></p><ul><li>创建html文件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@system2 ~]# vim /var/www/html/index.html</span><br><span class="line">[root@system2 ~]# cat /var/www/html/index.html </span><br><span class="line">system2.example.com</span><br><span class="line">[root@system2 ~]# </span><br></pre></td></tr></table></figure><p><img src="https://cdn.peacecity.cn/img/20201220115236.png" alt="配置过程"></p><ul><li>防火墙开启80端口</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@system2 ~]# firewall-cmd --permanent --add-port=80/tcp</span><br><span class="line">success</span><br><span class="line">[root@system2 ~]# </span><br></pre></td></tr></table></figure><ul><li>重启httpd服务并设置开启启动</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@system2 ~]# systemctl restart httpd</span><br><span class="line">[root@system2 ~]# </span><br><span class="line">[root@system2 ~]# systemctl enable httpd</span><br><span class="line">Created symlink /etc/systemd/system/multi-user.target.wants/httpd.service → /usr/lib/systemd/system/httpd.service.</span><br><span class="line">[root@system2 ~]# </span><br></pre></td></tr></table></figure><ul><li>测试网站是否正常访问</li></ul><p>此处不做演示哈哈哈，根据题目要求能访问即可</p><h3 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h3><p><img src="https://cdn.peacecity.cn/img/20201220192301.png" alt="第七题"></p><p>第七题考察PHP的配置也是在apache服务器配置的基础上进行配置，具体配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@system2 ~]# yum install -y php</span><br></pre></td></tr></table></figure><p>然后接着在<code>/var/www/html/</code>目录下下载要求的php文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget ftp://192.168.1.1/example.php</span><br></pre></td></tr></table></figure><p>最后重启apache服务即可完成，最后还剩两道题一个是LVM卷的配置和Ansible自动化服务的配置，哈哈哈我不会就不继续总结了哈哈哈哈</p><p><img src="https://cdn.peacecity.cn/img/20201220193237.png" alt="第8,9题"></p><div class="note success modern"><p>总结完毕<del>~</del></p></div>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redhat </tag>
            
            <tag> linux </tag>
            
            <tag> 试题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMware Workstation16密钥</title>
      <link href="/60420.html"/>
      <url>/60420.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="这是正文"><a href="#这是正文" class="headerlink" title="这是正文"></a>这是正文</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ZF3R0-FHED2-M80TY-8QYGC-NPKYF</span><br><span class="line">YF390-0HF8P-M81RQ-2DXQE-M2UT6</span><br><span class="line">ZF71R-DMX85-08DQY-8YMNC-PPHV8</span><br></pre></td></tr></table></figure><h2 id="完毕！！"><a href="#完毕！！" class="headerlink" title="完毕！！"></a>完毕！！</h2>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密钥 </tag>
            
            <tag> 虚拟机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RHEL 8.0 磁盘分区管理</title>
      <link href="/24692.html"/>
      <url>/24692.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>RHEL8和Centos8他们的分区管理和上代一样，此处将展示一到2019红帽挑战赛复赛试题来演示系统的分区以及其他管理操作</p><p><img src="https://cdn.peacecity.cn/img/20201122134827.jpg" alt="试题"></p><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><ul><li>首先需要给虚拟机增添一块20G的SATA硬盘具体步骤如下：</li></ul><p><img src="https://cdn.peacecity.cn/img/20201122140207.png" alt="在虚拟机设置里点击添加"></p><p><img src="https://cdn.peacecity.cn/img/20201122140237.png" alt="选择硬盘"></p><p><img src="https://cdn.peacecity.cn/img/20201122140357.png" alt="选择SATA"></p><p><img src="https://cdn.peacecity.cn/img/20201122140420.png" alt="选择创建新的虚拟硬盘"></p><p><img src="https://cdn.peacecity.cn/img/20201122140504.png" alt="数值设置为20G"></p><p>后面接着下一步即可</p><ul><li>添加完成后开始分区</li></ul><ol><li>查看硬盘是否已上线</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@desktop ~]# lsblk</span><br></pre></td></tr></table></figure><p><img src="https://cdn.peacecity.cn/img/20201122140759.png"></p><ol start="2"><li>查看硬盘是哪种分区表格式</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@desktop ~]# parted 磁盘名（例如/dev/sda） print</span><br></pre></td></tr></table></figure><p><img src="https://cdn.peacecity.cn/img/20201122140733.png" alt="查看Partition Table"></p><blockquote><p>如果是MBR分区请使用fdisk分区，GPT分区则使用gdisk分区。一定不能搞错，否则会导致分区失败</p></blockquote><ol start="3"><li>使用fdisk新增分区 （gdisk使用方法类似）</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@desktop ~]# fdisk /dev/sda</span><br></pre></td></tr></table></figure><p><img src="https://cdn.peacecity.cn/img/20201122141753.png" alt="根据提示输入命令即可"></p><ol start="4"><li>分区完成后检查是否分区成功</li></ol><p><img src="https://cdn.peacecity.cn/img/20201122141951.png"></p><ol start="5"><li>磁盘格式化（创建文件系统）</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@desktop ~]# mkfs.ext4 或者 xfs 根据具体要求更改</span><br></pre></td></tr></table></figure><p><img src="https://cdn.peacecity.cn/img/20201122142500.png"></p><ol start="6"><li>检查格式化是否正确</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@desktop ~]# blkid /dev/sda1</span><br></pre></td></tr></table></figure><p><img src="https://cdn.peacecity.cn/img/20201122142755.png"></p><ol start="7"><li>创建挂载目录且设置自动开机挂载</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@desktop ~]# mkdir /cehuabu</span><br><span class="line">[root@desktop ~]# echo &quot;/dev/sda1 /cehuabu ext4 defaults 0 0&quot; &gt;&gt; /etc/fstab</span><br><span class="line">[root@desktop ~]# more /etc/fstab</span><br><span class="line">[root@desktop ~]# mount -a //mount -a 自动挂载/etc/fstab文件没有挂载的设备，不管已挂载过的设备</span><br><span class="line">[root@desktop ~]# df -h //查看是否挂载上</span><br></pre></td></tr></table></figure><p><img src="https://cdn.peacecity.cn/img/20201122143112.png"></p><div class="note success modern"><p>总结完毕<del>~</del></p></div>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redhat </tag>
            
            <tag> linux </tag>
            
            <tag> 教程 </tag>
            
            <tag> 磁盘分区 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RHEL 8.0 配置YUM本地源</title>
      <link href="/58531.html"/>
      <url>/58531.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在RHEL8中把软件源分成了两个部分，一个是BaseOS，另一个是AppStream。在Red Hat Enterprise Linux 8.0中，统一的ISO自动加载BaseOS和AppStream安装源存储库。已经存在于光盘链接中，只不过要分别去配置.repo文件。BaseOS 存储库 - BaseOS 存储库以传统 RPM 包的形式提供底层核心 OS 内容。AppStream 存储库 - Application Stream 存储库提供用户可能希望在给定用户空间中运行的所有应用程序。</p><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# mkdir /yum</span><br><span class="line">[root@localhost ~]# mount /dev/cdrom /yum</span><br><span class="line">mount: /yum: WARNING: device write-protected, mounted read-only.</span><br><span class="line">[root@localhost ~]# df -h</span><br><span class="line">Filesystem             Size  Used Avail Use% Mounted on</span><br><span class="line">devtmpfs               889M     0  889M   0% /dev</span><br><span class="line">tmpfs                  904M     0  904M   0% /dev/shm</span><br><span class="line">tmpfs                  904M   18M  886M   2% /run</span><br><span class="line">tmpfs                  904M     0  904M   0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/rhel-root   17G  3.9G   14G  23% /</span><br><span class="line">/dev/sda1             1014M  170M  845M  17% /boot</span><br><span class="line">tmpfs                  181M   20K  181M   1% /run/user/42</span><br><span class="line">tmpfs                  181M  3.5M  178M   2% /run/user/0</span><br><span class="line">/dev/sr0               6.7G  6.7G     0 100% /yum</span><br><span class="line">[root@localhost ~]# echo &quot;/dev/cdrom /yum iso9660 defaults 0 0&quot; &gt;&gt; /etc/fstab </span><br><span class="line">[root@localhost ~]# cat /etc/fstab </span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># /etc/fstab</span><br><span class="line"># Created by anaconda on Tue Dec 24 05:39:07 2019</span><br><span class="line">#</span><br><span class="line"># Accessible filesystems, by reference, are maintained under &#x27;/dev/disk/&#x27;.</span><br><span class="line"># See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info.</span><br><span class="line">#</span><br><span class="line"># After editing this file, run &#x27;systemctl daemon-reload&#x27; to update systemd</span><br><span class="line"># units generated from this file.</span><br><span class="line">#</span><br><span class="line">/dev/mapper/rhel-root   /                       xfs     defaults        0 0</span><br><span class="line">UUID=e48080e4-ba01-45e5-a8fe-90ebb4c17c28 /boot                   xfs     defaults        0 0</span><br><span class="line">/dev/mapper/rhel-swap   swap                    swap    defaults        0 0</span><br><span class="line">/dev/cdrom /yum iso9660 defaults 0 0</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# cd /etc/yum.repos.d/</span><br><span class="line">[root@localhost yum.repos.d]# vim AppStream.repo</span><br><span class="line">[AppStream]</span><br><span class="line">name=AppStream</span><br><span class="line">baseurl=file:///yum/AppStream</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">[root@localhost yum.repos.d]# vim BaseOS.repo</span><br><span class="line">[BaseOS]</span><br><span class="line">name=BaseOS</span><br><span class="line">baseurl=file:///yum/BaseOS</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">[root@localhost yum.repos.d]# ls</span><br><span class="line">AppStream.repo  BaseOS.repo  redhat.repo</span><br></pre></td></tr></table></figure><blockquote><p>注：与原来BaseOS和AppStream两个储存库都需要指定(建议复制)</p></blockquote><h2 id="主要步骤"><a href="#主要步骤" class="headerlink" title="主要步骤"></a>主要步骤</h2><ul><li><p>创建挂载文件夹</p></li><li><p>挂载镜像文件到新创建的文件夹</p></li><li><p>检查磁盘</p></li><li><p>设置开机自动挂载</p></li><li><p>修改新增repo源文件</p></li></ul><p><img src="https://cdn.peacecity.cn/img/20201121221111.png" alt="具体步骤"></p><h2 id="检查是否更新源完成"><a href="#检查是否更新源完成" class="headerlink" title="检查是否更新源完成"></a>检查是否更新源完成</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost yum.repos.d]# yum makecache</span><br><span class="line">[root@localhost yum.repos.d]# yum clean all</span><br><span class="line">[root@localhost yum.repos.d]# yum repolist</span><br></pre></td></tr></table></figure><p><img src="https://cdn.peacecity.cn/img/20201121221206.png"><br><img src="https://cdn.peacecity.cn/img/20201121221222.png"></p><h2 id="Centos7以及RHEL7本地源配置"><a href="#Centos7以及RHEL7本地源配置" class="headerlink" title="Centos7以及RHEL7本地源配置"></a>Centos7以及RHEL7本地源配置</h2><h3 id="主要步骤-1"><a href="#主要步骤-1" class="headerlink" title="主要步骤"></a>主要步骤</h3><p>和RHEL8 差不多</p><ul><li><p>创建挂载文件</p></li><li><p>挂载镜像文件到新创建的文件夹</p></li><li><p>检查磁盘</p></li><li><p>备份且修改repo源文件</p></li></ul><h3 id="实现命令"><a href="#实现命令" class="headerlink" title="实现命令"></a>实现命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# mkdir /yum</span><br><span class="line">[root@localhost ~]# mount /dev/cdrom /yum</span><br><span class="line">[root@localhost ~]# df -h</span><br><span class="line">Filesystem             Size  Used Avail Use% Mounted on</span><br><span class="line">devtmpfs               889M     0  889M   0% /dev</span><br><span class="line">tmpfs                  904M     0  904M   0% /dev/shm</span><br><span class="line">tmpfs                  904M   18M  886M   2% /run</span><br><span class="line">tmpfs                  904M     0  904M   0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/rhel-root   17G  3.9G   14G  23% /</span><br><span class="line">/dev/sda1             1014M  170M  845M  17% /boot</span><br><span class="line">tmpfs                  181M   20K  181M   1% /run/user/42</span><br><span class="line">tmpfs                  181M  3.5M  178M   2% /run/user/0</span><br><span class="line">/dev/sr0               6.7G  6.7G     0 100% /yum</span><br><span class="line">[root@localhost ~]# echo &quot;/dev/cdrom /yum iso9660 defaults 0 0&quot; &gt;&gt; /etc/fstab </span><br><span class="line">[root@localhost ~]# cd /etc/yum.repos.d/</span><br><span class="line">[root@localhost ~]# cp CentOS-Base.repo CentOS-Base.repo.bak</span><br><span class="line">[root@localhost ~]# vi CentOS-Base.repo</span><br></pre></td></tr></table></figure><p><img src="https://cdn.peacecity.cn/img/20201121221742.png" alt="修改repo文件"></p><blockquote><p>在repo文件中注释掉mirrorlist这一行，修改baseurl的路径为你挂载的目录地址</p></blockquote><h3 id="修改完成repo文件后测试源是否更改完成"><a href="#修改完成repo文件后测试源是否更改完成" class="headerlink" title="修改完成repo文件后测试源是否更改完成"></a>修改完成repo文件后测试源是否更改完成</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost yum.repos.d]# yum makecache</span><br><span class="line">[root@localhost yum.repos.d]# yum clean all</span><br><span class="line">[root@localhost yum.repos.d]# yum repolist</span><br></pre></td></tr></table></figure><div class="note success modern"><p>总结完毕<del>~</del></p></div>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 本地源 </tag>
            
            <tag> redhat </tag>
            
            <tag> linux </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RHEL 8.0 配置IP地址以及重启网络方式</title>
      <link href="/62443.html"/>
      <url>/62443.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="前导"><a href="#前导" class="headerlink" title="前导"></a>前导</h2><p>本文主要讲解如何重启RHEL 8或者CentOS 8网络以及如何解决RHEL8和CentOS8系统的网络管理服务报错，当我们安装好RHEL 8或者 CentOS 8，重启启动网络时，会出现以下报错：</p><p><img src="https://cdn.peacecity.cn/img/20201121115514.png"></p><p>报错信息如下<br><code>Failed to restart network.service: Unit network.service not found.</code><br>意思为无法重启网络服务，原因是无法找到network.service网络服务</p><p>出现错误的原因是，在RHEL 8和CentOS 8系统里，已废弃network.service，因此只能通过其它方法进行网络配置，包括NM命令工具集。换言之，在rhel8上，必须开启NM，否则无法使用网络</p><p>此时必须找到你的网卡标识，可用如下命令确定网卡标识符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root#localhost ~]# ip addr</span><br></pre></td></tr></table></figure><p>比如我的虚拟机网卡标识符就是<code>ens160</code></p><p><img src="https://cdn.peacecity.cn/img/20201121120349.png"></p><h2 id="RHEL8或者CentOS8利用手工配置ifcfg使用nmcli来生效新的网络配置"><a href="#RHEL8或者CentOS8利用手工配置ifcfg使用nmcli来生效新的网络配置" class="headerlink" title="RHEL8或者CentOS8利用手工配置ifcfg使用nmcli来生效新的网络配置"></a>RHEL8或者CentOS8利用手工配置<code>ifcfg</code>使用<code>nmcli</code>来生效新的网络配置</h2><ul><li>假设网卡标识符为xxx</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root#localhost ~]# vi etc/sysconfig/network-scripts/ifcfg-xxx</span><br></pre></td></tr></table></figure><p><img src="https://cdn.peacecity.cn/img/20201121120924.png"></p><p>此文件里ONBOOT记得一定要开启也就是yes</p><ul><li>保存后使用<code>nmcli</code>重新回载网络配置</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root#localhost ~]# nmcli c reload</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root#localhost ~]# nmcli c up xxx</span><br></pre></td></tr></table></figure><ul><li>最后使用<code>ifconfig</code>查看是否成功修改</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root#localhost ~]# ifconfig</span><br></pre></td></tr></table></figure><ul><li>整体流程如下：</li></ul><p><img src="https://cdn.peacecity.cn/img/20201121121225.png"></p><div class="note success modern"><p>总结完毕<del>~</del></p></div>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redhat </tag>
            
            <tag> linux </tag>
            
            <tag> 教程 </tag>
            
            <tag> root </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RHEL 8.0 重置root密码</title>
      <link href="/39097.html"/>
      <url>/39097.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="前导"><a href="#前导" class="headerlink" title="前导"></a>前导</h2><p>如果你忘记了RHEL 8系统中的root密码，那就得重置root密码，以下为在Grub启动菜单中在RHEL 8上进行手动密码恢复</p><h2 id="引导-重启RHEL-8系统"><a href="#引导-重启RHEL-8系统" class="headerlink" title="引导/重启RHEL 8系统"></a>引导/重启RHEL 8系统</h2><ul><li>将系统重启，在看到grub菜单后，按键盘上<code>e</code>键中断启动过程：</li></ul><p><img src="https://cdn.peacecity.cn/img/20201120215129.png" alt="在此界面按`e`键"></p><ul><li>按完后，将显示linux内核启动参数，此时我们需要修改里面的内容，以便重置RHEL8.0上重置root密码<br>参数如下：</li></ul><p><img src="https://cdn.peacecity.cn/img/20201120214632.png"></p><ul><li>接着删除 <code>ro crash\</code> 这些内容然后添加<code>rd.break enforcing=0</code></li><li>或者在第六行最后面的<code>quiet</code>后添加如下参数：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console=tty0 rd.break</span><br></pre></td></tr></table></figure><p>输入完成后 <code>Ctrl+x</code>保存退出</p><p><img src="https://cdn.peacecity.cn/img/20201120214630.png"></p><ul><li>退出后将进入单用户模式，此时必须使用<code>rw</code>标志重新安装系统的根目录，因为它处于只读模式</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">switch_root:/#  mount -o remount,rw /sysroot</span><br><span class="line">switch_root:/# chroot /sysroot  //切换到/sysroot目录重置root密码</span><br><span class="line">sh-4.4# passwd      //使用passwd命令在RHEL8上重置root密码</span><br></pre></td></tr></table></figure><p>或者使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">switch_root:/#  mount -o remount,rw /sysroot</span><br><span class="line">switch_root:/# chroot /sysroot  //切换到/sysroot目录重置root密码</span><br><span class="line">sh-4.4# echo &quot;这个地方填入你更改之后的密码&quot; | passwd --stdin root</span><br></pre></td></tr></table></figure><ul><li>此时输入所需密码并在出现提示时确认，设置密码后，在重新启动时启用SELinux重新标记并退出控制</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">touch /.autorelabel   //此句很重要，selinux会重新对系统文件进行重新标记</span><br><span class="line">exit</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p><img src="https://cdn.peacecity.cn/img/20201120214634.png"></p><ul><li>退出后等待系统启动即可</li></ul><p><img src="https://cdn.peacecity.cn/img/20201120214633.png"></p><div class="note success modern"><p>总结完毕<del>~</del></p></div>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redhat </tag>
            
            <tag> linux </tag>
            
            <tag> 教程 </tag>
            
            <tag> root </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>字符串和格式化输入输出</title>
      <link href="/10685.html"/>
      <url>/10685.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="第四章总结"><a href="#第四章总结" class="headerlink" title="第四章总结"></a>第四章总结</h1><h2 id="示例程序"><a href="#示例程序" class="headerlink" title="示例程序"></a>示例程序</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span>  <span class="comment">//提供strlen();函数原型</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DENSITY 62.4</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">float</span> weight , volume;</span><br><span class="line">        <span class="keyword">int</span> size, letters;</span><br><span class="line">        <span class="keyword">char</span> name[<span class="number">40</span>];      <span class="comment">//使用数组</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;你好！你姓什么？\n&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,name)  <span class="comment">//数组不使用&amp;</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s,你体重是多少？\n&quot;</span>,name);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;weight);</span><br><span class="line">        size = <span class="keyword">sizeof</span> name; <span class="comment">//sizeof函数对于具体量括号是可选的</span></span><br><span class="line">        letters = <span class="built_in">strlen</span>(name);</span><br><span class="line">        volume = weight/DENSITY;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;好的,%s,你的人体密度为%2.2f \n&quot;</span>,name,volume);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;然后，你的姓有%d个字母\n&quot;</span>,letters);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;你的名字占用 %d bytes的存储空间\n&quot;</span>,size);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="解释程序"><a href="#解释程序" class="headerlink" title="解释程序"></a>解释程序</h2><ol><li>&lt;string.h&gt; 提供 strlen() 函数</li><li>define XXX volune C预处理器定义常量</li><li>%s 字符串型格式符 处理字符串的输入和输出</li><li>weight 使用 &amp; 而name未使用</li><li>strlen() 获取字符串长度</li></ol><h2 id="字符串概述"><a href="#字符串概述" class="headerlink" title="字符串概述"></a>字符串概述</h2><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><ul><li>一个或多个字符的序列</li><li>C没有为字符串定义专门的变量类型</li><li>字符串存储在 char 数组中</li><li>字符串存储空间要比存储的字符串的字符数多1</li></ul><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><p><img src="https://cdn.peacecity.cn/img/20201115142045.png" alt="字符串存储空间要比存储的字符串的字符数多1"></p><h3 id="scanf-函数特性"><a href="#scanf-函数特性" class="headerlink" title="scanf()函数特性"></a><code>scanf()</code>函数特性</h3><p>当遇到一个空白字符空格（blank），制表符（tab）或换行符（newline）处停止读取，若停止读取的字符串后还有字符串，则在下一次使用scanf()函数时接着读取</p><p>一般情况下，使用%s的scanf()只会吧一个单词作为字符串读入</p><h2 id="字符和字符串"><a href="#字符和字符串" class="headerlink" title="字符和字符串"></a>字符和字符串</h2><div class="note success modern"><p>未完待续<del>~</del></p></div>]]></content>
      
      
      <categories>
          
          <category> C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> 读书总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言环境配置基于MinGW</title>
      <link href="/20344.html"/>
      <url>/20344.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h2><p>　最常用的免费可用的编译器是 GNU 的 C/C++ 编译器，为了在 Windows 上安装 GCC，您需要安装 MinGW，安装MinGW之后的windows系统便有了linux系统的感觉，可以直接使用make，gcc，ls等命令直接进行操作。</p><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><h3 id="官网下载MinGW"><a href="#官网下载MinGW" class="headerlink" title="官网下载MinGW"></a>官网下载MinGW</h3><blockquote><p>官网地址: <a href="http://www.mingw.org/">http://www.mingw.org/</a></p></blockquote><p><img src="https://cdn.peacecity.cn/img/20201102195115.png" alt="右上角点击Download"><br><img src="https://cdn.peacecity.cn/img/20201102201042.png" alt="点击下载图标"></p><h3 id="下载完成后安装"><a href="#下载完成后安装" class="headerlink" title="下载完成后安装"></a>下载完成后安装</h3><ul><li>打开安装包点击安装</li></ul><p><img src="https://cdn.peacecity.cn/img/20201106213038.png" alt="点击install"></p><p><img src="https://cdn.peacecity.cn/img/20201106213149.png" alt="先选择安装的地址，再点击continue"></p><h3 id="等待相关文件安装完之后，点击continue"><a href="#等待相关文件安装完之后，点击continue" class="headerlink" title="等待相关文件安装完之后，点击continue"></a>等待相关文件安装完之后，点击continue</h3><p><img src="https://cdn.peacecity.cn/img/20201106213241.png"></p><h3 id="安装mingw软件"><a href="#安装mingw软件" class="headerlink" title="安装mingw软件"></a>安装mingw软件</h3><p><img src="https://cdn.peacecity.cn/img/20201102201130.png" alt="点击所示图标"></p><ul><li>点击basic setup之后，将所有选项勾选并设置成Mark for Installation</li></ul><p><img src="https://cdn.peacecity.cn/img/20201106213425.png"></p><ul><li>点击软件左上角的Installation,在选择Apply Changes</li></ul><p><img src="https://cdn.peacecity.cn/img/20201106213509.png"></p><ul><li>点击apply进行下载</li></ul><p><img src="https://cdn.peacecity.cn/img/20201106213533.png"></p><ul><li>等待下载完成后，在点击close关闭软件，到这里mingw就安装完成了。下面就是配置</li></ul><p><img src="https://cdn.peacecity.cn/img/20201106213557.png"></p><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><ul><li>进入系统设置</li></ul><p><img src="https://cdn.peacecity.cn/img/20201106213712.png" alt="点击系统"></p><ul><li>找到关于找到高级系统设置</li></ul><p><img src="https://cdn.peacecity.cn/img/20201106213752.png"></p><ul><li>若找不到（win10系统）则可以使用搜索</li></ul><p><img src="https://cdn.peacecity.cn/img/20201106213913.png" alt="电脑左下角搜索按钮搜索高级系统设置"></p><ul><li>选择环境变量</li></ul><p><img src="https://cdn.peacecity.cn/img/20201106214003.png"></p><ul><li>在系统变量中选择Path双击，并选择新建</li></ul><p><img src="https://cdn.peacecity.cn/img/20201106214050.png"></p><ul><li>添加环境变量（mingw的bin文件的路径）找到bin文件的路径</li></ul><p><img src="https://cdn.peacecity.cn/img/20201106214131.png" alt="复制安装minGW的路径"></p><ul><li>把复制好的路径添加到环境变量当中</li></ul><p><img src="https://cdn.peacecity.cn/img/20201106214220.png" alt="点击确定"></p><h3 id="测试安装是否成功"><a href="#测试安装是否成功" class="headerlink" title="测试安装是否成功"></a>测试安装是否成功</h3><ul><li><code>Win+R</code> 调出运行窗口</li></ul><p><img src="https://cdn.peacecity.cn/img/20201106214341.png"></p><ul><li>运行窗口输入<code>cmd</code>调出命令提示符</li></ul><p><img src="https://cdn.peacecity.cn/img/20201106214414.png"></p><ul><li>在命令提示符窗口输入<code>gcc -v</code>或<code>g++ -v</code>出现如下内容则安装成功</li></ul><p><img src="https://cdn.peacecity.cn/img/20201106214530.png"></p><h3 id="编译运行编辑好的C语言文件"><a href="#编译运行编辑好的C语言文件" class="headerlink" title="编译运行编辑好的C语言文件"></a>编译运行编辑好的C语言文件</h3><ul><li>首先使用Visual studio Code创建和编辑你的C语言文件</li></ul><p><img src="https://cdn.peacecity.cn/img/20201106215443.png" alt="在目录里右击新建文件记得添加.c文件后缀"></p><p><img src="https://cdn.peacecity.cn/img/20201106215446.png" alt="创建完成后"></p><p><img src="https://cdn.peacecity.cn/img/20201106215449.png" alt="编辑内容"></p><ul><li>保存好C语言后 按照上面<code>测试安装是否成功</code>教程的前一二步调出命令提示符</li></ul><p><img src="https://cdn.peacecity.cn/img/20201106215721.png" alt="你的C语言文件名字不唯一"></p><ul><li>假如你的c语言文件在E盘的C Study文件夹里，命令提示符切换到E盘且进入该文件夹</li></ul><p><img src="https://cdn.peacecity.cn/img/20201106215856.png" alt="复制文件目录"></p><ul><li>命令提示符切换E盘且进入文件夹，编译编辑好的.c文件</li></ul><blockquote><p>此处编译C语言文件使用<code>gcc 你的文件名.c</code>命令</p></blockquote><p><img src="https://cdn.peacecity.cn/img/20201106215903.png"></p><ul><li>编译好后你的文件夹会生成<code>a.exe</code>的可执行文件</li></ul><p><img src="https://cdn.peacecity.cn/img/20201106220145.png"></p><ul><li>在命令提示符里输入<code>a.exe</code>则运行编辑好的程序</li></ul><p><img src="https://cdn.peacecity.cn/img/20201106215903.png"></p><div class="note success modern"><p>总结完毕<del>~</del></p></div>]]></content>
      
      
      <categories>
          
          <category> C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> 读书总结 </tag>
            
            <tag> 环境配置 </tag>
            
            <tag> MinGW </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>思科模拟器常用配置命令</title>
      <link href="/43804.html"/>
      <url>/43804.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本人脑子笨、记性不好。翻书找命令太麻烦，索性自己总结命令在博客里，方便查阅</p><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><h3 id="路由器命令"><a href="#路由器命令" class="headerlink" title="路由器命令"></a>路由器命令</h3><h4 id="路由器口令设置"><a href="#路由器口令设置" class="headerlink" title="路由器口令设置"></a>路由器口令设置</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">router&gt;enable                           进入特权模式</span><br><span class="line">router#config terminal                  进入全局配置模式</span><br><span class="line">router(config)#hostname &lt;hostname&gt;      设置交换机的主机名</span><br><span class="line">router(config)#enable secret xxx        设置特权加密口令</span><br><span class="line">router(config)#enable password xxb      设置特权非密口令</span><br><span class="line">router(config)#line console 0           进入控制台口</span><br><span class="line">router(config-line)#line vty 0 4        进入虚拟终端</span><br><span class="line">router(config-line)#login               要求口令验证</span><br><span class="line">router(config-line)#password xx         设置登录口令xx</span><br><span class="line">router(config)#(Ctrl+z)                 返回特权模式</span><br><span class="line">router#exit                             返回命令</span><br></pre></td></tr></table></figure><h4 id="路由器配置"><a href="#路由器配置" class="headerlink" title="路由器配置"></a>路由器配置</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">router(config)#int s0/0                             进入Serail接口</span><br><span class="line">router(config-if)#no shutdown                       激活当前接口</span><br><span class="line">router(config-if)#clock rate 64000                  设置同步时钟</span><br><span class="line">router(config-if)#ip address &lt;ip&gt; &lt;netmask&gt;         设置IP地址</span><br><span class="line">router(config-if)#ip address &lt;ip&gt; &lt;netmask&gt; second  设置第二个IP</span><br><span class="line">router(config-if)#int f0/0.1                        进入子接口</span><br><span class="line">router(config-subif.1)#ip address &lt;ip&gt; &lt;netmask&gt;    设置子接口IP</span><br><span class="line">router(config-subif.1)#encapsulation dot1q &lt;n&gt;      绑定vlan中继协议</span><br><span class="line">router(config)#config-register 0x2142               跳过配置文件</span><br><span class="line">router(config)#config-register 0x2102               正常使用配置文件</span><br><span class="line">router#reload                                       重新引导</span><br></pre></td></tr></table></figure><h4 id="路由器文件操作"><a href="#路由器文件操作" class="headerlink" title="路由器文件操作"></a>路由器文件操作</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">router#copy running-config startup-config           保存配置</span><br><span class="line">router#copy running-config tftp                     保存配置到tftp</span><br><span class="line">router#copy startup-config tftp                     开机配置存到tftp</span><br><span class="line">router#copy tftp flash:                             下传文件到flash</span><br><span class="line">router#copy tftp startup-config                     下载配置文件</span><br><span class="line">ROM状态：</span><br><span class="line">Ctrl+Break                                          进入ROM监控状态</span><br><span class="line">rommon&gt;confreg 0x2142                               跳过配置文件</span><br><span class="line">rommon&gt;confreg 0x2102                               恢复配置文件</span><br><span class="line">rommon&gt;reset                                        重新引导</span><br><span class="line">rommon&gt;copy xmodem:&lt;sname&gt; flash:&lt;dname&gt;            从console传输文件</span><br><span class="line">rommon&gt;IP_ADDRESS=10.65.1.2                         设置路由器IP</span><br><span class="line">rommon&gt;IP_SUBNET_MASK=255.255.0.0                   设置路由器掩码</span><br><span class="line">rommon&gt;TFTP_SERVER=10.65.1.1                        指定TFTP服务器IP</span><br><span class="line">rommon&gt;TFTP_FILE=c2600.bin                          指定下载的文件</span><br><span class="line">rommon&gt;tftpdnld                                     从tftp下载</span><br><span class="line">rommon&gt;dir flash:                                   查看闪存内容</span><br><span class="line">rommon&gt;boot                                         引导IOS</span><br></pre></td></tr></table></figure><h4 id="静态路由"><a href="#静态路由" class="headerlink" title="静态路由"></a>静态路由</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ip route &lt;ip-address&gt; &lt;subnet-mask&gt; &lt;gateway&gt;       命令格式</span><br><span class="line">router(config)#ip route 2.0.0.0 255.0.0.0 1.1.1.2   静态路由举例</span><br><span class="line">router(config)#ip route 0.0.0.0 0.0.0.0 1.1.1.2     默认路由举例</span><br></pre></td></tr></table></figure><h4 id="动态路由"><a href="#动态路由" class="headerlink" title="动态路由"></a>动态路由</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">router(config)#ip routing                          启动路由转发</span><br><span class="line">router(config)#router rip                          启动RIP路由协议。</span><br><span class="line">router(config-router)#network &lt;netid&gt;              设置发布路由</span><br><span class="line">router(config-router)#negihbor &lt;ip&gt;                点对点帧中继用。</span><br></pre></td></tr></table></figure><h4 id="帧中继命令"><a href="#帧中继命令" class="headerlink" title="帧中继命令"></a>帧中继命令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">router(config)#frame-relay switching               使能帧中继交换</span><br><span class="line">router(config-s0)#encapsulation frame-relay        使能帧中继</span><br><span class="line">router(config-s0)#fram-relay lmi-type cisco        设置管理类型</span><br><span class="line">router(config-s0)#frame-relay intf-type DCE        设置为DCE</span><br><span class="line">router(config-s0)#frame-relay dlci 16              </span><br><span class="line">router(config-s0)#frame-relay local-dlci 20        设置虚电路号</span><br><span class="line">router(config-s0)#frame-relay interface-dlci 16 </span><br><span class="line">router(config)#log-adjacency-changes             记录邻接变化</span><br><span class="line">router(config)#int s0/0.1 point-to-point         设置子接口点对点</span><br><span class="line">router#show frame pvc                            显示永久虚电路</span><br><span class="line">router#show frame map                            显示映射</span><br></pre></td></tr></table></figure><h4 id="基本访问控制列表"><a href="#基本访问控制列表" class="headerlink" title="基本访问控制列表"></a>基本访问控制列表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">router(config)#access-list &lt;number&gt; permit|deny &lt;source_ip&gt; &lt;wild|any&gt;</span><br><span class="line">router(config)#interface &lt;interface&gt;             ；default:deny any</span><br><span class="line">router(config-if)#ip access-group &lt;number&gt; in|out   ；defaultut</span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">例1：</span><br><span class="line">router(config)#access-list 1 deny host 10.65.1.1</span><br><span class="line">router(config)#access-list 1 permit any</span><br><span class="line">router(config)#int f0/0</span><br><span class="line">router(config-if)#ip access-group 4 in</span><br><span class="line">例2：</span><br><span class="line">router(config)#access-list 4 permit 10.8.1.1</span><br><span class="line">router(config)#access-list 4 deny 10.8.1.0 0.0.0.255</span><br><span class="line">router(config)#access-list 4 permit 10.8.0.0 0.0.255.255</span><br><span class="line">router(config)#access-list 4 deny 10.0.0.0 0.255.255.255</span><br><span class="line">router(config)#access-list 4 permit any</span><br><span class="line">router(config)#int f0/1</span><br><span class="line">router(config-if)#ip access-group 4 in</span><br><span class="line">扩展访问控制列表：</span><br><span class="line">access-list &lt;number&gt; permit|deny icmp &lt;S_IP wild&gt; &lt;D_IP wild&gt;[type]</span><br><span class="line">access-list &lt;number&gt; permit|deny tcp &lt;S_IP wild&gt; &lt;D_IP wild&gt;[port]</span><br><span class="line">例1：</span><br><span class="line">router(config)#access-list 101 deny icmp any 10.64.0.2 0.0.0.0 echo</span><br><span class="line">router(config)#access-list 101 permit ip any any</span><br><span class="line">router(config)#int s0/0</span><br><span class="line">router(config-if)#ip access-group 101 in</span><br><span class="line">例2：</span><br><span class="line">router(config)#access-list 102 deny tcp any 10.65.0.2 0.0.0.0 eq 80</span><br><span class="line">router(config)#access-list 102 permit ip any any</span><br><span class="line">router(config)#interface s0/1</span><br><span class="line">router(config-if)#ip access-group 102 out</span><br><span class="line">删除访问控制例表:</span><br><span class="line">router(config)#no access-list 102</span><br><span class="line">router(config-if)#no ip access-group 101 in</span><br><span class="line">路由器的nat配置</span><br><span class="line">Router(config-if)#ip nat inside              当前接口指定为内部接口</span><br><span class="line">Router(config-if)#ip nat outside             当前接口指定为外部接口</span><br><span class="line">Router(config)#ip nat inside source static [p] &lt;私有IP&gt;&lt;公网IP&gt; [port]</span><br><span class="line">Router(config)#ip nat inside source static 10.65.1.2 60.1.1.1</span><br><span class="line">Router(config)#ip nat inside source static tcp 10.65.1.3 80 60.1.1.1 80</span><br><span class="line">Router(config)#ip nat pool p1 60.1.1.1 60.1.1.20 255.255.255.0</span><br><span class="line">Router(config)#ip nat inside source list 1 pool p1</span><br><span class="line">Router(config)#ip nat inside destination list 2 pool p2</span><br><span class="line">Router(config)#ip nat inside source list 2 interface s0/0 overload</span><br><span class="line">Router(config)#ip nat pool p2 10.65.1.2 10.65.1.4 255.255.255.0 type rotary</span><br><span class="line">Router#show ip nat translation</span><br><span class="line">rotary 参数是轮流的意思，地址池中的IP轮流与NAT分配的地址匹配。</span><br><span class="line">overload参数用于PAT 将内部IP映射到一个公网IP不同的端口上。</span><br><span class="line">外部网关协议配置</span><br><span class="line">routerA(config)#router bgp 100</span><br><span class="line">routerA(config-router)#network 19.0.0.0</span><br><span class="line">routerA(config-router)#neighbor 8.1.1.2 remote-as 200</span><br><span class="line">配置PPP验证：</span><br><span class="line">RouterA(config)#username &lt;RouterB&gt; password &lt;word&gt;</span><br><span class="line">RouterA(config)#int s0</span><br><span class="line">RouterA(config-if)#ppp authentication &#123;chap|pap&#125;</span><br></pre></td></tr></table></figure><h4 id="路由器子接口封装为802-1q"><a href="#路由器子接口封装为802-1q" class="headerlink" title="路由器子接口封装为802.1q"></a>路由器子接口封装为802.1q</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Encapsulation dot1q 2      封装类型设置为 802.1Q,2是子接口号标识，这里是示范，可以随意设置。</span><br></pre></td></tr></table></figure><h3 id="交换机常用命令"><a href="#交换机常用命令" class="headerlink" title="交换机常用命令"></a>交换机常用命令</h3><h4 id="交换机基本状态"><a href="#交换机基本状态" class="headerlink" title="交换机基本状态"></a>交换机基本状态</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">switch:                                            ；交换机的ROM状态</span><br><span class="line">rommon&gt;                                            ；路由器的ROM状态</span><br><span class="line">hostname&gt;                                        ；用户模式</span><br><span class="line">hostname#                                        ；特权模式</span><br><span class="line">hostname(config)#                               ；全局配置模式</span><br><span class="line">hostname(config-if)#                                ；接口状态</span><br></pre></td></tr></table></figure><h4 id="交换机口令设置"><a href="#交换机口令设置" class="headerlink" title="交换机口令设置"></a>交换机口令设置</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">switch&gt;enable                                      ；进入特权模式</span><br><span class="line">switch#config terminal                            ；进入全局配置模式</span><br><span class="line">switch(config)#hostname                 ；设置交换机的主机名</span><br><span class="line">switch(config)#enable secret xxx                    ；设置特权加密口令</span><br><span class="line">switch(config)#enable password xxa                ；设置特权非密口令</span><br><span class="line">switch(config)#line console 0                   ；进入控制台口</span><br><span class="line">switch(config-line)#line vty 0 4                    ；进入虚拟终端</span><br><span class="line">switch(config-line)#login                          ；允许登录</span><br><span class="line">switch(config-line)#password xx                    ；设置登录口令xx</span><br><span class="line">switch#exit                                     ；返回命令</span><br></pre></td></tr></table></figure><h4 id="交换机VLAN设置"><a href="#交换机VLAN设置" class="headerlink" title="交换机VLAN设置"></a>交换机VLAN设置</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">switch#vlan database                                ；进入VLAN设置</span><br><span class="line">switch(vlan)#vlan 2                                ；建VLAN 2</span><br><span class="line">switch(vlan)#no vlan 2                            ；删vlan 2</span><br><span class="line">switch(config)#int f0/1                         ；进入端口1</span><br><span class="line">switch(config-if)#switchport access vlan 2       ；当前端口加入vlan 2</span><br><span class="line">switch(config-if)#switchport mode trunk          ；设置为干线</span><br><span class="line">switch(config-if)#switchport trunk allowed vlan 1,2 ；设置允许的vlan</span><br><span class="line">switch(config-if)#switchport trunk encap dot1q    ；设置vlan 中继</span><br><span class="line">switch(config)#vtp domain                     ；设置发vtp域名</span><br><span class="line">switch(config)#vtp password                 ；设置发vtp密码</span><br><span class="line">switch(config)#vtp mode server                   ；设置发vtp模式</span><br><span class="line">switch(config)#vtp mode client                   ；设置发vtp模式</span><br></pre></td></tr></table></figure><h4 id="交换机设置IP地址"><a href="#交换机设置IP地址" class="headerlink" title="交换机设置IP地址"></a>交换机设置IP地址</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">switch(config)#interface vlan 1                    ；进入vlan 1</span><br><span class="line">switch(config-if)#ip address           ；设置IP地址</span><br><span class="line">switch(config)#ip default-gateway               ；设置默认网关</span><br><span class="line">switch#dir flash:                               ；查看闪存</span><br></pre></td></tr></table></figure><h4 id="交换机显示命令"><a href="#交换机显示命令" class="headerlink" title="交换机显示命令"></a>交换机显示命令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">switch#write                                     ；保存配置信息</span><br><span class="line">switch#show vtp                                  ；查看vtp配置信息</span><br><span class="line">switch#show run                                  ；查看当前配置信息</span><br><span class="line">switch#show vlan                                  ；查看vlan配置信息</span><br><span class="line">switch#show interface                            ；查看端口信息</span><br><span class="line">switch#show int f0/0                                ；查看指定端口信息</span><br></pre></td></tr></table></figure><h4 id="交换机VLAN设置-1"><a href="#交换机VLAN设置-1" class="headerlink" title="交换机VLAN设置"></a>交换机VLAN设置</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">switch#vlan database ；进入VLAN设置</span><br><span class="line">switch(vlan)#vlan 2 ；建VLAN 2</span><br><span class="line">switch(vlan)#no vlan 2 ；删vlan 2</span><br><span class="line">switch(config)#int f0/1 ；进入端口1</span><br><span class="line">switch(config-if)#switchport access vlan 2 ；当前端口加入vlan 2</span><br><span class="line">switch(config-if)#switchport mode trunk ；设置为干线</span><br><span class="line">switch(config-if)#switchport trunk allowed vlan 1，2 ；设置允许的vlan  不明白</span><br><span class="line">switch(config-if)#switchport trunk encap dot1q ；设置vlan 中继</span><br><span class="line">何为中继，功能作用，二层到三层设置中继模式</span><br><span class="line">switch(config)#vtp domain  ；设置发vtp域名  什么是vtp</span><br><span class="line">switch(config)#vtp password  ；设置发vtp密码</span><br><span class="line">switch(config)#vtp mode server ；设置发vtp模式</span><br><span class="line">switch(config)#vtp mode client ；设置发vtp模式</span><br></pre></td></tr></table></figure><blockquote><p>以上资料均来自网上，如有错误欢迎指出</p></blockquote><div class="note success modern"><p>总结完毕<del>~</del></p></div>]]></content>
      
      
      <categories>
          
          <category> 路由交换技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 路由交换技术 </tag>
            
            <tag> 思科模拟器 </tag>
            
            <tag> 命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Serverless实现B站打卡签到(Tencent云函数部署教程)</title>
      <link href="/1970.html"/>
      <url>/1970.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h2><p>emmm怎么突然会出这个教程呢，因为俺要白嫖TX，如下图：<br><img src="https://cdn.peacecity.cn/img/20200930203151.png" alt="腾讯云函数公众号活动"><br>这是腾讯云函数公众号的一个搭建环境送礼品的活动，截止日期：10.9 </p><blockquote><p>这活动多亏群友分享，不然俺也不知道还有这种白嫖的好事情嘿嘿嘿，感谢群友~</p></blockquote><h2 id="步入正题"><a href="#步入正题" class="headerlink" title="步入正题"></a>步入正题</h2><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>这个脚本的作用就是可以实现B站自动签到打卡且不浪费闲置资源<br><em>Serverless</em>可以让你不买服务器，也不需要在本地计算机安装<code>Python</code>等运行环境，实现全云端托管运行<br>本文基于：<code>@happy888888</code> 的项目代码<br>项目地址：<a class="btn-beautify button--animated " href="https://github.com/happy888888/BiliExp"   title="BiliExp"><span>BiliExp</span></a>  </p><h3 id="使用本地CLI部署"><a href="#使用本地CLI部署" class="headerlink" title="使用本地CLI部署"></a>使用本地CLI部署</h3><ol><li><p>安装命令行工具<code>Serverless Framework</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g serverless</span><br></pre></td></tr></table></figure><p><img src="https://cdn.peacecity.cn/img/20200930204500.png"></p></li><li><p>下载项目模板代码，并进入模板目录<code>biliexp-demo</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sls create --template-url https://github.com/happy888888/BiliExp.git</span><br><span class="line">sls init biliexp-demo</span><br><span class="line">cd biliexp-demo</span><br></pre></td></tr></table></figure></li><li><p>打开<code>bilibili</code>官网，登陆自己账户获取SEEDATA,bili_jct,DedeUserID (获取方式参考下图)<br><img src="https://cdn.peacecity.cn/img/20200930204726.png" alt="获取 cookieDatas（以 Chrome 为例）：登录 B 站 -&gt; 右键点击「检查」-&gt; application -&gt; cookies"></p></li><li><p>打开 <code>config.json</code> 文档，根据说明填入对应内容，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;cookieDatas&quot;</span>:[</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="attr">&quot;SESSDATA&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">           <span class="attr">&quot;bili_jct&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">           <span class="attr">&quot;DedeUserID&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">       &#125;</span><br><span class="line">   ],</span><br><span class="line">   <span class="attr">&quot;email&quot;</span>: <span class="string">&quot;&quot;</span> ,</span><br><span class="line">   <span class="attr">&quot;说明&quot;</span>:<span class="string">&quot;cookieDatas由浏览器获取， email 处填入您用于接受通知的邮件名&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>通过命令 <code>sls deploy</code> 完成部署，部署成功后，每日可自动触发，为您完成签到打卡</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sls deploy</span><br></pre></td></tr></table></figure><p><img src="https://cdn.peacecity.cn/img/20200930205050.png" alt="中途会出现一个二维码，需要用微信扫码登陆腾讯云授权腾讯云函数">  </p></li><li><p>部署完毕后登陆腾讯云函数控制台，击「测试」按钮检测函数运行结果，可以看到函数调用成功</p></li></ol><p><img src="https://cdn.peacecity.cn/img/20200930205231.png"></p><ol start="7"><li>测试完毕后，可以去B站个人主页查看是否签到成功~<br><img src="https://cdn.peacecity.cn/img/20200930205324.png"></li></ol><blockquote><p>教程完毕！</p></blockquote><div class="note success modern"><p>总结完毕<del>~</del></p></div>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BiliBili </tag>
            
            <tag> 云函数 </tag>
            
            <tag> 腾讯 </tag>
            
            <tag> 白嫖 </tag>
            
            <tag> Serverless </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali linux安装后调试</title>
      <link href="/64719.html"/>
      <url>/64719.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><div class="note info modern"><p>不知道写些啥，那就随便水一水文章吧哈哈哈哈</p></div><h1 id="root用户密码更新及更新kali镜像源"><a href="#root用户密码更新及更新kali镜像源" class="headerlink" title="root用户密码更新及更新kali镜像源"></a>root用户密码更新及更新kali镜像源</h1><h2 id="更新root密码"><a href="#更新root密码" class="headerlink" title="更新root密码"></a>更新root密码</h2><blockquote><p>在2020.1以上的版本中kali linux引入了默认非root用户登陆的方式</p></blockquote><h3 id="切换root用户第一步先设置密码"><a href="#切换root用户第一步先设置密码" class="headerlink" title="切换root用户第一步先设置密码"></a>切换root用户第一步先设置密码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd root</span><br></pre></td></tr></table></figure><h3 id="设置完毕后切换身份"><a href="#设置完毕后切换身份" class="headerlink" title="设置完毕后切换身份"></a>设置完毕后切换身份</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su root</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/peaceplace/CDN/img/20200815222734.png" alt="切换用户">  </p><h2 id="更新kali镜像源"><a href="#更新kali镜像源" class="headerlink" title="更新kali镜像源"></a>更新kali镜像源</h2><blockquote><p>推荐更新为USTC中科大镜像源<br>地址：<a href="http://mirrors.ustc.edu.cn/">http://mirrors.ustc.edu.cn/</a></p></blockquote><h3 id="第一步进入USTC镜像源官网"><a href="#第一步进入USTC镜像源官网" class="headerlink" title="第一步进入USTC镜像源官网"></a>第一步进入USTC镜像源官网</h3><p>复制以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">deb https://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br></pre></td></tr></table></figure><p><img src="https://cdn.peacecity.cn/img/20200918164721.png"></p><h3 id="第二步编辑-etc-apt-sources-list-文件"><a href="#第二步编辑-etc-apt-sources-list-文件" class="headerlink" title="第二步编辑 /etc/apt/sources.list 文件"></a>第二步编辑 <code>/etc/apt/sources.list</code> 文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/apt/soureces.list</span><br></pre></td></tr></table></figure><p>将复制好的网址复制粘贴上去<br><img src="https://cdn.peacecity.cn/img/20200918165335.png"><br>编辑完成后<code>wq!</code>保存退出</p><h3 id="第三步更新"><a href="#第三步更新" class="headerlink" title="第三步更新"></a>第三步更新</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get upgrade -y</span><br></pre></td></tr></table></figure><p><img src="https://cdn.peacecity.cn/img/20200918165432.png"></p><p><img src="https://cdn.peacecity.cn/img/20200918165451.png"></p><h1 id="安装搜狗输入法"><a href="#安装搜狗输入法" class="headerlink" title="安装搜狗输入法"></a>安装搜狗输入法</h1><h2 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h2><p>首先先去官网下载<code>.deb</code>的安装包</p><blockquote><p>网址：<a href="https://pinyin.sogou.com/linux/?r=pinyin">https://pinyin.sogou.com/linux/?r=pinyin</a></p></blockquote><p><img src="https://cdn.peacecity.cn/img/20200918165649.png"></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i [安装包名字.deb]</span><br></pre></td></tr></table></figure><p><img src="https://cdn.peacecity.cn/img/20200918165809.png"></p><p>此时会提示缺少依赖，命令行输入以下内容装依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get --fix-broken install</span><br></pre></td></tr></table></figure><p><img src="https://cdn.peacecity.cn/img/20200918165928.png"></p><p>依赖安装完成后重复第一步，安装完成后<code>reboot</code>重启kali</p><h1 id="安装visual-studio-code"><a href="#安装visual-studio-code" class="headerlink" title="安装visual studio code"></a>安装<code>visual studio code</code></h1><h2 id="下载安装包-1"><a href="#下载安装包-1" class="headerlink" title="下载安装包"></a>下载安装包</h2><blockquote><p>网址：<a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a></p></blockquote><p><img src="https://cdn.peacecity.cn/img/20200918170316.png"></p><h2 id="下载完成后安装"><a href="#下载完成后安装" class="headerlink" title="下载完成后安装"></a>下载完成后安装</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i [安装包.deb]</span><br></pre></td></tr></table></figure><p>此时安装会出现以下警告<br><img src="https://cdn.peacecity.cn/img/20200918170410.png"><br>接着进入以下文件 添加以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi ~/bashrc.</span><br></pre></td></tr></table></figure><p><img src="https://cdn.peacecity.cn/img/20200918170507.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export PATH=/usr/local/sbin:/usr/sbin:/sbin:$PATH</span><br><span class="line">source ~/.bashrc</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p>编辑完成后<code>wq!</code>保存退出<br><img src="https://cdn.peacecity.cn/img/20200918170750.png"></p><p>接着重新<code>dpkg -i </code>安装code</p><h2 id="启动visual-studio-code"><a href="#启动visual-studio-code" class="headerlink" title="启动visual studio code"></a>启动<code>visual studio code</code></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code .</span><br></pre></td></tr></table></figure><p><img src="https://cdn.peacecity.cn/img/20200918170856.png"></p><p>这样就启动成功啦！<br><img src="https://cdn.peacecity.cn/img/20200918170925.png"></p><div class="note success modern"><p>好了，又可以愉快的玩耍了~</p></div>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 技巧 </tag>
            
            <tag> kali linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据和C</title>
      <link href="/28863.html"/>
      <url>/28863.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>本文为 <em>《C Primer Plus 第五版》</em> 读书总结</p></blockquote><h1 id="第三章总结"><a href="#第三章总结" class="headerlink" title="第三章总结"></a>第三章总结</h1><p>先上示例程序  </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*rhodium.c --用金属铑衡量你的体重*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">float</span> weight;</span><br><span class="line">        <span class="keyword">float</span> value;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;想知道你的体重值多少钱的金属铑嘛？\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;让我们来算算吧！\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请键入你的体重:&quot;</span>);</span><br><span class="line">        <span class="comment">/* 从用户处获取输入 */</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, &amp;weight);</span><br><span class="line">        <span class="comment">//假设金属铑每盎司770美元</span></span><br><span class="line">        <span class="comment">//14.5883把常衡制的英镑转换为金衡制的盎司</span></span><br><span class="line">        value = <span class="number">770</span> * weight * <span class="number">14.5883</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;你的体重值%.2f的金属铑喔！\n&quot;</span>,value);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>此程序包含的新元素  </li></ul><ol><li><code>%.2f</code> 精确控制输出到小数点后两位</li><li><code>int</code>整型变量</li><li><code>float</code>浮点变量 （即可使用带小数点的数）</li><li><code>scanf()</code>函数 可为程序提供键盘输入</li><li><code>%f</code> 指示<code>scanf()</code>从键盘上读取一个浮点数</li><li><code>&amp;weight</code>将输入值赋予命为weight的变量中</li></ol><h2 id="常量和变量"><a href="#常量和变量" class="headerlink" title="常量和变量"></a>常量和变量</h2><ol><li>程序需要使用数据，即承载信息的数字或字符</li><li>数据在整个程序中预先设置好且运行时无变化为常量</li><li>数据在程序运行时可能变化或被赋值的量为变量</li></ol><h2 id="数据类型关键字"><a href="#数据类型关键字" class="headerlink" title="数据类型关键字"></a>数据类型关键字</h2><p>如果是常量——直接书写<br>如果是变量——声明类型  </p><center><strong>C语言的数据关键字</strong></center>  <table><thead><tr><th align="center">原来的K&amp;R关键字</th><th align="center">C90关键字</th><th align="center">C99关键字</th></tr></thead><tbody><tr><td align="center">int</td><td align="center">signed</td><td align="center">_Bool</td></tr><tr><td align="center">long</td><td align="center">void</td><td align="center">_Complex</td></tr><tr><td align="center">short</td><td align="center"></td><td align="center">_Imaginary</td></tr><tr><td align="center">unsigned</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">char</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">float</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">double</td><td align="center"></td><td align="center"></td></tr></tbody></table><blockquote><p>解释：</p><blockquote><p><code>int</code>关键字提供C的基本整数类型<br><code>long</code> <code>short</code> <code>unsigned</code> <code>signed</code> 这些为变种<br><code>char</code> 用于表示字母以及其他字符，也可表示小的整数<br><code>float</code> <code>double</code>和组合 <code>long double</code>表示带有小数点的数<br><code>_Bool</code> 表示布尔值 （true or false）<br><code>_Complex</code>和<code>_Imaginary</code>分别表示复数和虚数</p></blockquote></blockquote><div class="note warning modern"><p>以上类型按计算机存储方式划分为：<br>整数（<em>integer</em>）类型<br>浮点数（<em>floating-Point</em>）类型</p></div><h3 id="位、字节和字"><a href="#位、字节和字" class="headerlink" title="位、字节和字"></a>位、字节和字</h3><ul><li>最小的存储单位：位 （bit）</li><li>常用计算机存储单位： 字节（byte）</li><li>自然的存储单位： 字 （word）</li></ul><h2 id="整数类型-amp-浮点数类型"><a href="#整数类型-amp-浮点数类型" class="headerlink" title="整数类型&amp;浮点数类型"></a>整数类型&amp;浮点数类型</h2><p>区别：他们的存储方式不同</p><ol><li>整数 （没有小数部分的数）</li></ol><ul><li>以二进制位存储</li></ul><ol start="2"><li>浮点数 （包含了整数之间的那些数）<br>例：2.75 3.16E7 7.00<blockquote><p>加了小数点的数是浮点型值  </p></blockquote></li></ol><ul><li>浮点数存储方式：将一个数分为小数部分和指数部分分别存储  </li></ul><h3 id="两种类型在应用中的区别"><a href="#两种类型在应用中的区别" class="headerlink" title="两种类型在应用中的区别"></a>两种类型在应用中的区别</h3><ol><li>整数没小数部分，浮点数有</li><li>浮点数可表示比整数范围大的多的数</li><li>对于一些算术运算，使用浮点数会损失更多精度</li><li>浮点数不能表示区域范围，只是实际值的近似</li><li>浮点运算通常比整数慢  </li></ol><h2 id="C-数据类型"><a href="#C-数据类型" class="headerlink" title="C 数据类型"></a>C 数据类型</h2><h3 id="有符号类型"><a href="#有符号类型" class="headerlink" title="有符号类型"></a>有符号类型</h3><blockquote><p>分正负的类型</p></blockquote><ul><li>有符号类型最高数称为<em>符号位</em> <ul><li>为<code>1</code>时 表示该数为负值</li><li>为<code>0</code>时 表示该数为正值</li></ul></li></ul><p>例： </p><ol><li>一个字节  0111 1111   最高位<code>0</code>表示正号 则<br>0111 1111 = + 111 1111 = +127  </li><li>一个字节  1111 1111   最高位<code>1</code>表示负号 则<br>1111 1111 = - 111 1111 = -127</li></ol><h3 id="无符号类型"><a href="#无符号类型" class="headerlink" title="无符号类型"></a>无符号类型</h3><blockquote><p>无正负的类型</p></blockquote><ul><li>其最高位的<code>1</code>或<code>0</code>和其他位一样，用来表示该数的大小  </li></ul><p>例：</p><ul><li>一个字节  1111 1111 = 255</li></ul><p>∴无符号的一个字节表示的数据范围为：<code>0~255</code> 共256个</p><h2 id="int类型"><a href="#int类型" class="headerlink" title="int类型"></a>int类型</h2><ul><li>int类型是基本选择 （系统的基本整数类型）</li><li>C语言保证其至少有16位长</li><li>int类型是<code>有符号类型</code> 正负都可 取值范围依赖于计算机</li></ul><h3 id="声明int变量"><a href="#声明int变量" class="headerlink" title="声明int变量"></a>声明int变量</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> abc;</span><br><span class="line"><span class="keyword">int</span> dogs,cows,goats;</span><br></pre></td></tr></table></figure><blockquote><p>分开声明 合并声明均可</p></blockquote><h3 id="初始化变量"><a href="#初始化变量" class="headerlink" title="初始化变量"></a>初始化变量</h3><ul><li>初始化（<em>initialize</em>）变量就是为变量赋一个初始值</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> dogs = <span class="number">21</span>;</span><br><span class="line"><span class="keyword">int</span> cows = <span class="number">32</span>,goats = <span class="number">14</span>;</span><br><span class="line"><span class="keyword">int</span> dogs,cows = <span class="number">32</span>;  <span class="comment">//此语句有效，但不建议使用</span></span><br></pre></td></tr></table></figure><blockquote><p>声明语句为变量创建，标定存储空间并为其制定初始值  </p></blockquote><h3 id="打印int值"><a href="#打印int值" class="headerlink" title="打印int值"></a>打印int值</h3><p>使用<code>printf()</code>函数打印<br><code>%d</code> 为格式说明符（<em>format specifier</em>）用于指示在一行中的什么位置打印整数</p><div class="note warning modern"><p>注意：格式说明符的数目同待打印数目相同</p></div><h2 id="八进制和十六进制"><a href="#八进制和十六进制" class="headerlink" title="八进制和十六进制"></a>八进制和十六进制</h2><ul><li>前缀<code>0x</code>或<code>0X</code> 表示使用十六进制值</li><li>前缀<code>0</code> 表示使用八进制值</li></ul><h3 id="显示八进制数和十六进制数"><a href="#显示八进制数和十六进制数" class="headerlink" title="显示八进制数和十六进制数"></a>显示八进制数和十六进制数</h3><ul><li>八进制显示整数 <code>%o</code></li><li>十六进制显示整数 <code>%x</code></li></ul><h3 id="显示C语言前缀"><a href="#显示C语言前缀" class="headerlink" title="显示C语言前缀"></a>显示C语言前缀</h3><p>使用格式说明符<code>%#o</code> <code>%#x</code> <code>%#X</code> 分别生成<code>0</code> <code>0x</code> <code>0X</code>前缀  </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// bases.c 以十进制、八进制和十六进制形式输出100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> x = <span class="number">100</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;十进制 = %d;八进制 = %o;十六进制 = %x \n&quot;</span>,x,x,x);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;十进制 = %d;八进制 = %#o;十六进制 = %#x \n&quot;</span>,x,x,x);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">十进制=100；八进制=144；十六进制=64</span><br><span class="line">十进制=100；八进制=0144；十六进制=0x64</span><br></pre></td></tr></table></figure><div class="note warning modern"><p>注意：要显示<code>0</code>和<code>0x</code>前缀必须在说明符中加入<code>#</code>符号！</p></div><h2 id="其他整数类型"><a href="#其他整数类型" class="headerlink" title="其他整数类型"></a>其他整数类型</h2><h3 id="short-int类型-（short类型）"><a href="#short-int类型-（short类型）" class="headerlink" title="short int类型 （short类型）"></a>short int类型 （short类型）</h3><ul><li>可能占用比int类型更少的存储空间，最大的short整数不大于最大的int整数值</li><li>用于仅需小数值的场合以节省空间</li><li>有符号类型</li><li>C语言保证其至少有16位长</li></ul><h3 id="long-int类型-（long类型）"><a href="#long-int类型-（long类型）" class="headerlink" title="long int类型 （long类型）"></a>long int类型 （long类型）</h3><ul><li>可能占用比int类型更多的存储空间，此类型整数不小于最大int整数值</li><li>用于使用大数值的场合</li><li>有符号类型</li><li>C语言保证其至少有32位长</li></ul><h3 id="long-long-int类型-（long-long类型）"><a href="#long-long-int类型-（long-long类型）" class="headerlink" title="long long int类型 （long long类型）"></a>long long int类型 （long long类型）</h3><ul><li>可能占用比long类型更多的存储空间，此类型整数不小于最大long整数值</li><li>用于使用更大数值的场合</li><li>有符号类型</li></ul><h3 id="unsigned-int类型"><a href="#unsigned-int类型" class="headerlink" title="unsigned int类型"></a>unsigned int类型</h3><ul><li>用于只使用非负值的场合</li><li>可表示更大数值</li><li>无符号类型</li></ul><h3 id="关键字signed可跟任何有符号类型一起使用，它使数据类型更明确"><a href="#关键字signed可跟任何有符号类型一起使用，它使数据类型更明确" class="headerlink" title="关键字signed可跟任何有符号类型一起使用，它使数据类型更明确"></a>关键字<code>signed</code>可跟任何有符号类型一起使用，它使数据类型更明确</h3><h3 id="声明其他整数类型"><a href="#声明其他整数类型" class="headerlink" title="声明其他整数类型"></a>声明其他整数类型</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">long</span> <span class="keyword">int</span> abc;</span><br><span class="line"><span class="keyword">long</span> abc;</span><br><span class="line"><span class="keyword">short</span> <span class="keyword">int</span> abc;</span><br><span class="line"><span class="keyword">short</span> abc;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> abc;</span><br><span class="line"><span class="keyword">unsigned</span> abc;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">short</span> abc;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> abc;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> abc;</span><br></pre></td></tr></table></figure><h3 id="基本数据类型最小取值范围"><a href="#基本数据类型最小取值范围" class="headerlink" title="基本数据类型最小取值范围"></a>基本数据类型最小取值范围</h3><h4 id="16位单位"><a href="#16位单位" class="headerlink" title="16位单位"></a>16位单位</h4><ul><li><code>short</code>类型和<code>int</code>类型最小取值范围: -32767~32767</li></ul><h4 id="32位单位"><a href="#32位单位" class="headerlink" title="32位单位"></a>32位单位</h4><ul><li><code>long</code>类型最小取值范围：-2147483647~2147483647</li></ul><h4 id="unsigned-short类型和unsigned-int类型"><a href="#unsigned-short类型和unsigned-int类型" class="headerlink" title="unsigned short类型和unsigned int类型"></a>unsigned short类型和unsigned int类型</h4><ul><li>最小取值范围：0~65535</li></ul><h4 id="unsigned-long类型"><a href="#unsigned-long类型" class="headerlink" title="unsigned long类型"></a>unsigned long类型</h4><ul><li>最小取值范围：0~4294967295</li></ul><h4 id="long-long类型"><a href="#long-long类型" class="headerlink" title="long long类型"></a>long long类型</h4><ul><li>最小取值范围：-9223372036875775807~9223372036875775807</li></ul><h4 id="unsigned-long-long类型"><a href="#unsigned-long-long类型" class="headerlink" title="unsigned long long类型"></a>unsigned long long类型</h4><ul><li>最小取值范围：0~18446744073709551615</li></ul><blockquote><p>诸多整数类型中优先考虑 <code>unsigned</code>类型、没必要时不要使用<code>long</code>类型、如需64位整数，使用<code>long long</code> 类型、在<code>int</code>为32位系统时，如需使用16位的值，使用<code>short</code>类型可以节省存储空间</p></blockquote><h3 id="整数溢出"><a href="#整数溢出" class="headerlink" title="整数溢出"></a>整数溢出</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//toobig.c --超出您系统上的最大int值</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">2147483647</span>;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">int</span> j = <span class="number">4294967295</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d \n&quot;</span>,i,i+<span class="number">1</span>,i+<span class="number">2</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%u %u %u \n&quot;</span>,j,j+<span class="number">1</span>,j+<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2147483647 -2147483648 -2147483647</span><br><span class="line">4294967295 0 1</span><br></pre></td></tr></table></figure><p>为什么会这样：无符号整数j当它达到最大值的时候，它将直接溢出到起始值也就是<code>0</code>，整数i道理相同，但是整数i属于有符号类型，它的起始值是<code>-2147483648</code>。但注意当i溢出它的最大值时，系统并没有给出提示</p><h2 id="打印其他类型数"><a href="#打印其他类型数" class="headerlink" title="打印其他类型数"></a>打印其他类型数</h2><ul><li>打印<code>unsigned int</code>数字： <code>%u</code></li><li>打印 <code>long</code> 数值： <code>%ld</code></li></ul><blockquote><p>若系统的<code>int</code>和<code>long</code>类型具有相同长度，可使用<code>%d</code></p></blockquote><ul><li>十六进制 <code>long</code> ：<code>%lx</code></li><li>八进制 <code>long</code> : <code>%lo</code></li><li><code>short</code>类型<ul><li><code>%hd</code> 十进制</li><li><code>%ho</code> 八进制</li><li><code>%hx</code> 十六进制</li></ul></li><li><code>h</code>和<code>l</code>前缀可+<code>u</code>表示无符号类型<ul><li><code>%lu</code>  unsigned long int</li><li><code>%hu</code>  unsigned short int</li></ul></li><li><code>long long</code>类型<ul><li><code>%lld</code> 有符号</li><li><code>%llu</code> 无符号</li></ul></li></ul><blockquote><p>格式说明符只能使用小写字母！</p></blockquote><h2 id="char类型"><a href="#char类型" class="headerlink" title="char类型"></a><code>char</code>类型</h2><p><code>char</code>类型用于存储字母和标点符号之类的字符，但其本身是整数类型<br>打印字符： <code>%c</code><br>可使用：</p><ul><li>unsigned</li><li>signed</li></ul><h3 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> abc;</span><br><span class="line"><span class="keyword">char</span> itable,latan;</span><br></pre></td></tr></table></figure><p>若赋值一个字符给变量： 加单引号/写ASCII码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> grade = `A`</span><br><span class="line"><span class="keyword">char</span> grade = <span class="number">65</span>  <span class="comment">//不建议</span></span><br></pre></td></tr></table></figure><h3 id="ASCII码和转义字符"><a href="#ASCII码和转义字符" class="headerlink" title="ASCII码和转义字符"></a>ASCII码和转义字符</h3><p>计算机处理字符时使用ASCII码，标准ASCII码值范围：0~127<br>单引号技术适用于字符、数字、标点符号<br>动作描述使用转义序列或ASCII码  </p><center><strong>转义序列</strong></center>  <table><thead><tr><th align="center">序列</th><th align="center">意义</th></tr></thead><tbody><tr><td align="center"><code>\a</code></td><td align="center">警报</td></tr><tr><td align="center"><code>\b</code></td><td align="center">退格</td></tr><tr><td align="center"><code>\f</code></td><td align="center">走纸</td></tr><tr><td align="center"><code>\n</code></td><td align="center">换行</td></tr><tr><td align="center"><code>\r</code></td><td align="center">回车</td></tr><tr><td align="center"><code>\t</code></td><td align="center">水平制表位</td></tr><tr><td align="center"><code>\v</code></td><td align="center">垂直制表位</td></tr><tr><td align="center"><code>\\</code></td><td align="center">反斜杠（\）</td></tr><tr><td align="center"><code>\&#39;</code></td><td align="center">单引号（`）</td></tr><tr><td align="center"><code>\&quot;</code></td><td align="center">双引号（”）</td></tr><tr><td align="center"><code>\?</code></td><td align="center">问号（?）</td></tr><tr><td align="center"><code>\Ooo</code></td><td align="center">八进制值（o表示一个八进制数字）</td></tr><tr><td align="center"><code>\xhh</code></td><td align="center">十六进制（h表示一个十六进制数字）</td></tr></tbody></table><blockquote><p><code>ASCII</code>码和转义字符之间，优先使用转义字符！它可使程序的可移植性更好！</p></blockquote><div class="note success modern"><p>总结完毕<del>~</del></p></div>]]></content>
      
      
      <categories>
          
          <category> C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> 读书总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PPP点对点协议配置方法</title>
      <link href="/39124.html"/>
      <url>/39124.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="PPP点对点协议简介"><a href="#PPP点对点协议简介" class="headerlink" title="PPP点对点协议简介"></a>PPP点对点协议简介</h1><p>PPP (<em>Point to Point Protocal</em>) 点对点协议为在点对点连接上传输多协议数据包提供了一个标准方式，<code>PPP</code>最初设计是为了两个对等节点之间的IP流量传输提供一种封装协议。在<code>TCP/IP协议集</code>中他是一种用来同步调制连接的一种封装协议，数据链路层协议（OSI模型中的第二层）替代了原来非标准的第二层协议，即<code>SLIP</code>  </p><p><img src="https://s1.ax1x.com/2020/09/07/wnO4i9.png"></p><h1 id="应用环境"><a href="#应用环境" class="headerlink" title="应用环境"></a>应用环境</h1><p>要接入第三方网络——电信、网通等时候用</p><blockquote><p>基于安全考虑，双方要经过验证才能连接  </p></blockquote><h1 id="配置命令（基于DCN的路由交换机）"><a href="#配置命令（基于DCN的路由交换机）" class="headerlink" title="配置命令（基于DCN的路由交换机）"></a>配置命令（基于DCN的路由交换机）</h1><h2 id="RouterA配置"><a href="#RouterA配置" class="headerlink" title="RouterA配置"></a>RouterA配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Router&gt; enable</span><br><span class="line">Router# config</span><br><span class="line">Router_config# hostname RouterA</span><br><span class="line">RouterA_config# username RouterB password 1234  //设置账号密码</span><br><span class="line">RouterA_config# int s0/1</span><br><span class="line">RouterA_config_s0/1# ip address 192.168.1.1 255.255.255.0</span><br><span class="line">RouterA_config_s0/1# encapsulation ppp  //封装PPP协议</span><br><span class="line">RouterA_config_s0/1# ppp chap hostname RouterA  //设置发给对方验证的账号</span><br><span class="line">RouterA_config_s0/1# physical-layer speed 64000  //设置DCE时钟频率</span><br><span class="line">RouterA_config_s0/1# no shutdown</span><br><span class="line">RouterA_config_s0/1# exit</span><br><span class="line">RouterA_config# aaa authentication ppp default local  //配置aaa的PPP认证方法表</span><br></pre></td></tr></table></figure><h2 id="RouterB配置"><a href="#RouterB配置" class="headerlink" title="RouterB配置"></a>RouterB配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Router&gt; enable</span><br><span class="line">Router# config</span><br><span class="line">Router_config# hostname RouterB</span><br><span class="line">RouterB_config# username RouterA password 1234  //设置账号密码</span><br><span class="line">RouterB_config# int s0/1</span><br><span class="line">RouterB_config_s0/1# ip address 192.168.1.1 255.255.255.0</span><br><span class="line">RouterB_config_s0/1# encapsulation ppp  //封装PPP协议</span><br><span class="line">RouterB_config_s0/1# ppp authentication chap  //设置验证方式</span><br><span class="line">RouterB_config_s0/1# ppp chap hostname RouterB  //设置发给对方验证的账号</span><br><span class="line">RouterB_config_s0/1# no shutdown</span><br><span class="line">RouterB_config_s0/1# exit</span><br><span class="line">RouterB_config# aaa authentication ppp default local  //配置aaa的PPP认证方法表</span><br></pre></td></tr></table></figure><div class="note success modern"><p>总结完毕，又成功的水了一篇文章哈哈哈</p></div>]]></content>
      
      
      <categories>
          
          <category> 路由交换技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 路由交换技术 </tag>
            
            <tag> DCN </tag>
            
            <tag> 神州数码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言概述</title>
      <link href="/23316.html"/>
      <url>/23316.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>本文为 <em>《C Primer Plus 第五版》</em> 读书总结</p></blockquote><h1 id="第一章总结"><a href="#第一章总结" class="headerlink" title="第一章总结"></a>第一章总结</h1><h2 id="C语言概览"><a href="#C语言概览" class="headerlink" title="C语言概览"></a>C语言概览</h2><ul><li>贝尔实验室 <em>Dennis Ritchie</em> <code>1972</code> 开发C  </li></ul><h3 id="C语言特点"><a href="#C语言特点" class="headerlink" title="C语言特点"></a>C语言特点</h3><ul><li>强大控制结构</li><li>快速</li><li>更小的程序</li><li>可移植  </li></ul><h3 id="编程七步骤"><a href="#编程七步骤" class="headerlink" title="编程七步骤"></a>编程七步骤</h3><ol><li>定义目标程序<blockquote><p>想要编写哪种程序，该程序能干啥</p></blockquote></li><li>设计程序<blockquote><p>多长时间能完成程序，程序的目标用户是谁，程序该用哪种方法处理数据</p></blockquote></li><li>编写代码<br>C 源代码例子:<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hello world\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>编译</li><li>运行程序</li><li>测试和调试<blockquote><p>定期测试和调试源程序看有没有bug</p></blockquote></li><li>维护和修改程序<blockquote><p>根据具体情况具体需求定期维护和修改程序  </p></blockquote></li></ol><h3 id="编程机制"><a href="#编程机制" class="headerlink" title="编程机制"></a>编程机制</h3><p>源代码→编译器→目标代码→<code>链接器</code>→可执行代码</p><blockquote><p>链接器←库代码、启动代码 链接器的作用将（目标代码、系统标准启动代码、库代码）结合在一起并存放在单个文件中  </p></blockquote><ul><li>Unix系统编译<br>若现在有个名叫inform.c的程序<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;hello,world!\n&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>如果要在unix系统上编译它则：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cc inform.c</span><br></pre></td></tr></table></figure>几秒后会生成<code>a.out</code>的新文件，这是包含程序转换结果的可执行文件,要运行该文件，只需键入：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.out</span><br></pre></td></tr></table></figure>输入结果如下：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hello,world!</span><br></pre></td></tr></table></figure><div class="note warning modern"><p>如果希望保存可执行文件<code>a.out</code>则必须将其重命名，否则，该文件会被下一次编译程序时产生的新一个<code>a.out</code>文件代替</p></div></li><li>Linux编译<br>linux系统编译类似于Unix系统，生成的可执行程序也是<code>a.out</code>不同的是linux系统需要使用由GNU提供的被称为gcc的公共域编译器<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc inform.c</span><br></pre></td></tr></table></figure></li><li>windows系统编译<br>可用集成开发环境（IDE）编译C程序  </li></ul><h1 id="第二章总结"><a href="#第二章总结" class="headerlink" title="第二章总结"></a>第二章总结</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line">  <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>上面的C语言程序实例说明如下：  </p><h2 id="include指示和头文件"><a href="#include指示和头文件" class="headerlink" title="#include指示和头文件"></a><code>#include</code>指示和头文件</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span> <span class="comment">//该行告诉编译器包含文件stdio.h的全部信息</span></span></span><br></pre></td></tr></table></figure><p>其中<code>stdio.h</code>为标准输入输出头文件（ <em>standard input output header</em> ）<br>而<code>#include</code>为C预处理器指令</p><blockquote><p>头文件指引编译器把您的程序正确地组合在一起</p></blockquote><h2 id="mian-函数"><a href="#mian-函数" class="headerlink" title="mian()函数"></a><code>mian()</code>函数</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br></pre></td></tr></table></figure><p>这一行代码声明了一个命为<code>main()</code>的函数且返回给操作系统一个整数</p><blockquote><p><code>int main()</code>这个函数是C语言程序开始总是第一个被调用的函数</p></blockquote><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 可以这样写 */</span></span><br><span class="line"><span class="comment">//可以这样写</span></span><br></pre></td></tr></table></figure><p>注释不会被输出，只是方便程序开发人员更容易理解程序 </p><h2 id="花括号、程序体和代码块"><a href="#花括号、程序体和代码块" class="headerlink" title="花括号、程序体和代码块"></a>花括号、程序体和代码块</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通常，所有的C函数都使用花括号来表示函数体的开始和结束  </p><h2 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> num;</span><br></pre></td></tr></table></figure><p>程序这一行叫声明语句（<em>declaration statement</em>）这行代码例子中声明了两件事情：1.在函数中有一个名为<code>num</code>的变量 2.<code>int</code>说明<code>num</code>是一个整数，也就是说这个数没小数点或者小数部分（<em>int是一种数据类型</em>）  </p><div class="note warning modern"><p>在C语言中，所有变量都必须在使用之前定义</p></div><h2 id="变量名"><a href="#变量名" class="headerlink" title="变量名"></a>变量名</h2><p>这个变量名没什么好说的，但是定义变量名需要注意下面几点：</p><ul><li>变量名第一个字符必须是字母或者是下划线</li><li>C语言的变量名区分大小写</li><li>变量名不能使用关键字和保留标识符  </li></ul><h2 id="赋值"><a href="#赋值" class="headerlink" title="赋值"></a>赋值</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">num = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>这行程序是一个赋值语句（<em>assignment statement</em>）<br>这句话的意思就是说把值<code>1</code>赋给变量<code>num</code>，相当于num为一个房子，给这个房子里扔进去了一个<code>1</code>的数字</p><blockquote><p>赋值语句赋值的顺序是从右往左，分号结束</p></blockquote><h2 id="Return语句"><a href="#Return语句" class="headerlink" title="Return语句"></a><code>Return</code>语句</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p><code>return</code>语句是程序的最后一个语句</p><h2 id="一个简单程序的结构"><a href="#一个简单程序的结构" class="headerlink" title="一个简单程序的结构"></a>一个简单程序的结构</h2><p>必须有一个名为<code>main()</code>的函数<br>函数的描述由函数头和函数体组成</p><center><strong>函数头</strong></center><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span>  <span class="comment">//预处理指令</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span>   <span class="comment">//带参数的函数名</span></span></span><br></pre></td></tr></table></figure><center><strong>函数体</strong></center><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> q;  <span class="comment">//声明语句</span></span><br><span class="line">q = <span class="number">1</span>;  <span class="comment">//赋值语句</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d is neat. \n&quot;</span>,q); <span class="comment">//函数语句</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="程序可读性"><a href="#程序可读性" class="headerlink" title="程序可读性"></a>程序可读性</h2><ul><li>使用有意义的变量名</li><li>使用注释</li><li>使用空行</li><li>每行一个语句  </li></ul><blockquote><p>每个C语句都是一个针对计算机的指令，并以一个分号作为结束标志  </p></blockquote><h2 id="查找语义错误"><a href="#查找语义错误" class="headerlink" title="查找语义错误"></a>查找语义错误</h2><ul><li>自我检查</li><li>在程序关键点加入额外<code>printf()</code></li><li>使用调试器  </li></ul><h2 id="关键字和保留标识符"><a href="#关键字和保留标识符" class="headerlink" title="关键字和保留标识符"></a>关键字和保留标识符</h2><center><strong>C语言的关键字列表</strong></center>  <table><thead><tr><th align="center">auto</th><th align="center"><strong>enum</strong></th><th align="center"><em>restrict</em></th><th align="center">unsigned</th></tr></thead><tbody><tr><td align="center">break</td><td align="center">extern</td><td align="center">return</td><td align="center"><strong>void</strong></td></tr><tr><td align="center">case</td><td align="center">float</td><td align="center">short</td><td align="center"><strong>volatile</strong></td></tr><tr><td align="center">char</td><td align="center">for</td><td align="center"><strong>signed</strong></td><td align="center">while</td></tr><tr><td align="center"><strong>const</strong></td><td align="center">goto</td><td align="center">sizeof</td><td align="center"><em>_Bool</em></td></tr><tr><td align="center">continue</td><td align="center">if</td><td align="center">static</td><td align="center"><em>_Complex</em></td></tr><tr><td align="center">default</td><td align="center">inline</td><td align="center">struct</td><td align="center"><em>_Imaginary</em></td></tr><tr><td align="center">do</td><td align="center">int</td><td align="center">switch</td><td align="center"></td></tr><tr><td align="center">double</td><td align="center">long</td><td align="center">typeof</td><td align="center"></td></tr><tr><td align="center">else</td><td align="center">register</td><td align="center">union</td><td align="center"></td></tr></tbody></table><blockquote><p>关键字是C语言的词汇</p></blockquote><div class="note success modern"><p>总结完毕<del>~</del></p></div><a class="btn-beautify button--animated blue block right larger" href="https://peacecity.cn/28863.html"   title="📚C语言读书总结Part2-数据与C"><i class="far fa-hand-point-right"></i><span>📚C语言读书总结Part2-数据与C</span></a>]]></content>
      
      
      <categories>
          
          <category> C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> 读书总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客备份</title>
      <link href="/34169.html"/>
      <url>/34169.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>博客的备份很重要很重要尤其像hexo这类的博客框架，因为需要本地生成所以一旦电脑坏了，就只能重新来过了  </p></blockquote><h2 id="如何备份"><a href="#如何备份" class="headerlink" title="如何备份"></a>如何备份</h2><p>hexo很友好的提供了一个可以备份的插件<code>hexo-git-backup</code><br>Github的项目地址点这里: <a class="btn-beautify button--animated " href="https://github.com/coneycode/hexo-git-backup"   title="项目地址"><span>项目地址</span></a></p><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p>打开git bash，执行以下命令:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-git-backup --save</span><br></pre></td></tr></table></figure><h2 id="创建Github仓库"><a href="#创建Github仓库" class="headerlink" title="创建Github仓库"></a>创建Github仓库</h2><ul><li>在github上新建一个<code>backup</code>的仓库，权限设置为<code>private</code>  </li></ul><p><img src="https://cdn.jsdelivr.net/gh/peaceplace/CDN/img/20200824143748.png" alt="创建仓库">  </p><ul><li>创建完成后复制ssh  </li></ul><p><img src="https://cdn.jsdelivr.net/gh/peaceplace/CDN/img/20200824143957.png" alt="复制ssh">  </p><h2 id="本地修改配置文件"><a href="#本地修改配置文件" class="headerlink" title="本地修改配置文件"></a>本地修改配置文件</h2><ul><li>在本地命令行输入  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add backup 你获取的ssh链接</span><br></pre></td></tr></table></figure></li><li>修改<code>hexo</code>根目录下的<code>_config.yml</code>文件，在文件末尾添加以下内容<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">backup:</span><br><span class="line">  type: git</span><br><span class="line">  theme: 主题名称</span><br><span class="line">  repo: </span><br><span class="line">    backup: 你获取的ssh连接,master</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/peaceplace/CDN/img/20200824144719.png" alt="修改配置文件">  <h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2></li><li>git bash输入以下命令即可<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo backup</span><br></pre></td></tr></table></figure>简写<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo b</span><br></pre></td></tr></table></figure><div class="note success modern"><p>好啦，这样就可以进行博客的备份啦，在发布hexo的时候可以联合使用以下命令啦~<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d &amp;&amp; hexo b </code> </p></div></li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> Hexo </tag>
            
            <tag> 备份 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于jsDelivr+Github搭建个人图床</title>
      <link href="/57166.html"/>
      <url>/57166.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><div class="note info modern"><p>在建博客初期我还用着公益图床这个东西，然后看见其他搭博客的大佬们一个个都用着jsdelivr然后·····就有了下面的教程</p></div><blockquote><p>首先特别感谢<a href="https://dabailuobo.com">萝卜大佬</a>的图床教程！！！萝卜大佬超牛p！！！！</p></blockquote><h2 id="首先第一步需要在电脑上下载PicGo这个图片上传软件"><a href="#首先第一步需要在电脑上下载PicGo这个图片上传软件" class="headerlink" title="首先第一步需要在电脑上下载PicGo这个图片上传软件~"></a>首先第一步需要在电脑上下载PicGo这个图片上传软件~</h2><ul><li>地址如下：<blockquote><p><a href="https://github.com/Molunerfinn/PicGo">https://github.com/Molunerfinn/PicGo</a></p></blockquote><h2 id="第二步在自己的github上创建CDN仓库"><a href="#第二步在自己的github上创建CDN仓库" class="headerlink" title="第二步在自己的github上创建CDN仓库"></a>第二步在自己的github上创建CDN仓库</h2><div class="note info modern"><p>啊这就不展示了</p></div><h2 id="第三步在github上申请个人Token"><a href="#第三步在github上申请个人Token" class="headerlink" title="第三步在github上申请个人Token"></a>第三步在github上申请个人Token</h2></li><li>如图所示：  </li></ul><p><img src="https://cdn.jsdelivr.net/gh/peaceplace/CDN/img/20200814152533.png" alt="进设置">  </p><ul><li>进入设置  </li></ul><p><img src="https://cdn.jsdelivr.net/gh/peaceplace/CDN/img/20200814152700.png" alt="找到Developer setting">  </p><ul><li>找到Developer setting<br><img src="https://cdn.jsdelivr.net/gh/peaceplace/CDN/img/20200814152917.png" alt="点开personal access tokens">  </li><li>点看Developer setting后点开personal access tokens<br><img src="https://cdn.jsdelivr.net/gh/peaceplace/CDN/img/20200814153048.png" alt="选择generate new token"></li><li>在personal access tokens中选择generate new token随后复制生成好的token即可  </li></ul><h2 id="第三步将自己的仓库名和token等内容填进PicGo的Github图床设置里"><a href="#第三步将自己的仓库名和token等内容填进PicGo的Github图床设置里" class="headerlink" title="第三步将自己的仓库名和token等内容填进PicGo的Github图床设置里"></a>第三步将自己的仓库名和token等内容填进PicGo的Github图床设置里</h2><p><img src="https://cdn.jsdelivr.net/gh/peaceplace/CDN/img/20200814153247.png" alt="图床设置"></p><div class="note success modern"><p>填写完成后就可以上传图片咯</p></div><h2 id="图床使用方法"><a href="#图床使用方法" class="headerlink" title="图床使用方法"></a>图床使用方法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/[用户名]/[仓库名]</span><br></pre></td></tr></table></figure><div class="note success modern"><p>大功告成<del>又水了一篇文章哈哈哈哈</del></p></div>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> Github </tag>
            
            <tag> 图床 </tag>
            
            <tag> picgo </tag>
            
            <tag> jsdelivr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git使用技巧——发布Clone仓库</title>
      <link href="/36680.html"/>
      <url>/36680.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><div class="note info modern"><p>以前没咋使用过Git，但是自从建了博客后就用的好频繁。所以水一篇文章记录记录Git的用法哈哈哈~~</p></div><h2 id="首先clone需要的项目"><a href="#首先clone需要的项目" class="headerlink" title="首先clone需要的项目"></a>首先clone需要的项目</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone 代码地址</span><br></pre></td></tr></table></figure><h2 id="进入项目的目录里面"><a href="#进入项目的目录里面" class="headerlink" title="进入项目的目录里面"></a>进入项目的目录里面</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd 目录名称</span><br></pre></td></tr></table></figure><h2 id="删掉所有原来的git信息（一直回车）"><a href="#删掉所有原来的git信息（一直回车）" class="headerlink" title="删掉所有原来的git信息（一直回车）"></a>删掉所有原来的git信息（一直回车）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -r .git</span><br></pre></td></tr></table></figure><h2 id="初始化-git"><a href="#初始化-git" class="headerlink" title="初始化.git"></a>初始化.git</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><h2 id="查看状态"><a href="#查看状态" class="headerlink" title="查看状态"></a>查看状态</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><h2 id="将本地代码添加进仓库"><a href="#将本地代码添加进仓库" class="headerlink" title="将本地代码添加进仓库"></a>将本地代码添加进仓库</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><h2 id="把文件提交进仓库"><a href="#把文件提交进仓库" class="headerlink" title="把文件提交进仓库"></a>把文件提交进仓库</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;想咋填咋填看你自己&quot;</span><br></pre></td></tr></table></figure><h2 id="在GitHub网站上新建一个仓库，不要生成readme-md"><a href="#在GitHub网站上新建一个仓库，不要生成readme-md" class="headerlink" title="在GitHub网站上新建一个仓库，不要生成readme.md"></a>在GitHub网站上新建一个仓库，不要生成readme.md</h2><h2 id="关联远程库"><a href="#关联远程库" class="headerlink" title="关联远程库"></a>关联远程库</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin 远程库地址</span><br></pre></td></tr></table></figure><h2 id="提交代码"><a href="#提交代码" class="headerlink" title="提交代码"></a>提交代码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push --set-upstream origin master</span><br></pre></td></tr></table></figure><div class="note success modern"><p>总结完毕~~</p></div>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> Github </tag>
            
            <tag> 技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android avd manager unable解决方案</title>
      <link href="/57831.html"/>
      <url>/57831.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><div class="note info modern"><p>闲来无事 看看b站 突然对Android开发有了兴趣然后·····记录一下当时出现的小问题</p></div><h1 id="avd-manager-unable解决办法"><a href="#avd-manager-unable解决办法" class="headerlink" title="avd manager unable解决办法"></a>avd manager unable解决办法</h1><h3 id="步骤一-打开windows-defender防火墙页面"><a href="#步骤一-打开windows-defender防火墙页面" class="headerlink" title="步骤一: 打开windows defender防火墙页面"></a>步骤一: 打开windows defender防火墙页面</h3><p><img src="https://cdn.jsdelivr.net/gh/peaceplace/CDN/img/%E9%98%B2%E7%81%AB%E5%A2%99.png" alt="防火墙页面"></p><h3 id="步骤二-打开允许应用或功能通过windows-defender防火墙"><a href="#步骤二-打开允许应用或功能通过windows-defender防火墙" class="headerlink" title="步骤二: 打开允许应用或功能通过windows defender防火墙"></a>步骤二: 打开允许应用或功能通过windows defender防火墙</h3><p><img src="https://cdn.jsdelivr.net/gh/peaceplace/CDN/img/%E5%8B%BE%E9%80%89.png" alt="允许的应用"></p><h3 id="步骤三-选择更改设置，然后选择允许其他应用，找到Androidsdk-platform-tools中的adb-exe"><a href="#步骤三-选择更改设置，然后选择允许其他应用，找到Androidsdk-platform-tools中的adb-exe" class="headerlink" title="步骤三: 选择更改设置，然后选择允许其他应用，找到Androidsdk/platform-tools中的adb.exe"></a>步骤三: 选择更改设置，然后选择允许其他应用，找到Androidsdk/platform-tools中的adb.exe</h3><p><img src="https://cdn.jsdelivr.net/gh/peaceplace/CDN/img/%E6%B7%BB%E5%8A%A0.png" alt="浏览"></p><h3 id="步骤四-看步骤二的图片，将adb-exe的专用，公用复选框打上对勾然后确定就搞定啦！！！"><a href="#步骤四-看步骤二的图片，将adb-exe的专用，公用复选框打上对勾然后确定就搞定啦！！！" class="headerlink" title="步骤四: 看步骤二的图片，将adb.exe的专用，公用复选框打上对勾然后确定就搞定啦！！！~"></a>步骤四: 看步骤二的图片，将adb.exe的专用，公用复选框打上对勾然后确定就搞定啦！！！~</h3><div class="note success modern"><p>好了 又可以开始折腾这新东西了</p></div>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> AVD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云+hexo搭建个人博客教程（基于centos7.8）</title>
      <link href="/35661.html"/>
      <url>/35661.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><div class="note warning modern"><p>此教程默认你会一些基础的linux系统命令，譬如cd,mkdir, chmod等，以及基础的windows系统常用的cmd命令，如果不清楚这些命令，建议你请不要继续看下去~</p></div><h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><ol><li><p>拥有一台阿里云的服务器和已经购买好域名且操作系统镜像为centos7以上</p> <div class="note default modern"><p>这里默认你已经买好域名且已经实名认证</p></div></li><li><p>本次教程所需要的软件<br> a. FileZilla (用于上传和下载服务器文件)</p><blockquote><p><a href="https://filezilla-project.org/download.php?type=client">https://filezilla-project.org/download.php?type=client</a>  </p></blockquote><p> b. Putty (SSH/Telent客户端，用于连接服务器的终端)</p><blockquote><p><a href="https://github.com/larryli/PuTTY/releases">https://github.com/larryli/PuTTY/releases</a>  </p></blockquote><p> c. git (用于发布Hexo博客到服务器端的软件)</p><blockquote><p><a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></p></blockquote></li></ol><p>一切准备就绪后就开始正式的搭建之旅吧~</p><h1 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h1><h2 id="在本地计算机安装Hexo环境"><a href="#在本地计算机安装Hexo环境" class="headerlink" title="在本地计算机安装Hexo环境"></a>在本地计算机安装Hexo环境</h2><p> 博主本地环境：Windows 10 （64位）  </p><ol><li><p>安装Node.js<br> 自行去Node.js官网下载Windows（X64）长期支持版（LTS）按提示逐步安装。安装完成后打开windows自带的cmd窗口输入以下命令查看版本号验证是否安装成功。    </p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\用户名&gt; node -v</span><br><span class="line">C:\Users\用户名&gt; npm -v</span><br></pre></td></tr></table></figure></li><li><p>在自己电脑上的D盘或E盘创建名为”myblog”的文件夹</p></li><li><p>选中文件夹鼠标右击选择”Git Bash Here”  </p><p> <img src="https://cdn.peacecity.cn/img/20210508131903.jpg" alt="右击选择" title="右击选择红框内容"></p></li><li><p>在弹出的CMD框中输入  </p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p> 此命令是用来安装hexo在创建的文件夹中  </p></li><li><p>Hexo安装完成后，在myblog文件夹下新建myblogs项目，并且对其进行初始化的操作  </p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init myblogs</span><br><span class="line">cd myblogs</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>此时，会在myblog的文件夹下新建一个名为myblogs的文件夹，并且还会在此文件夹下生成相应的项目文件，如图所示<br> <img src="https://cdn.peacecity.cn/img/20210508132020.png" alt="生成的文件">  </p></li><li><p>返回到git的窗口中，输入以下命令即可在本地启动hexo服务  </p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>等待出现”INFO  Hexo is running at <a href="http://localhost:4000/">http://localhost:4000</a> . Press Ctrl+C to stop.”后<br>打开浏览器，在浏览器地址输入  </p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localhost:4000</span><br></pre></td></tr></table></figure><p>即可访问基于Hexo的个人博客主页了~<br> <img src="https://wx1.sbimg.cn/2020/08/01/PEUEV.jpg" alt="个人博客本地主页">  </p></li></ol><div class="note success modern"><p>目前为止本地计算机的操作暂告一段落  </p></div><h2 id="服务器端准备工作"><a href="#服务器端准备工作" class="headerlink" title="服务器端准备工作"></a>服务器端准备工作</h2><div class="note warning modern"><p>此时默认你会使用putty连接服务器且能够在阿里云服务器的控制台添加安全组和更改root密码   </p></div><h3 id="在服务器上安装nginx"><a href="#在服务器上安装nginx" class="headerlink" title="在服务器上安装nginx"></a>在服务器上安装nginx</h3><p>因为我们需要用nginx作为我们web服务器，所以我们要先安装nginx服务。具体操作如下：<br>使用root用户远程登录阿里云服务器后，使用yum命令进行安装，首先需安装nginx需要的相关的依赖库~   </p><ol><li><p>安装gcc gcc-c++</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y gcc gcc-c++</span><br></pre></td></tr></table></figure></li><li><p>安装PCRE库  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y pcre pcre-devel</span><br></pre></td></tr></table></figure></li><li><p>安装openssl、zlib、gcc依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y zlib zlib-devel</span><br><span class="line">yum install -y openssl openssl-devel</span><br></pre></td></tr></table></figure></li><li><p>下载nginx安装包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -c https://nginx.org/download/nginx-1.10.1.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>将安装包解压到/usr/local/目录下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf nginx-1.10.1.tar.gz -C /usr/local</span><br></pre></td></tr></table></figure></li><li><p>进入/usr/local目录，确认nginx是否解压到该目录下，进入nginx-1.10.1的目录中，会发现有一个./configure的可执行文件，执行该配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local</span><br><span class="line">ls</span><br><span class="line">cd nginx-1.10.1/</span><br><span class="line">./configure</span><br></pre></td></tr></table></figure></li><li><p>编译并安装nginx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure></li><li><p>查找nginx安装目录且进入安装目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">whereis nginx</span><br><span class="line">cd /usr/local/nginx</span><br><span class="line">ls</span><br></pre></td></tr></table></figure></li><li><p>防火墙开启80端口访问（此时你应在阿里云控制台中创建安全组开启所有IP进方向80端口可访问）默认linux不会开启80端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">systemctl status firewalld  //检查防火墙是否开启，若显示failed则为开启</span><br><span class="line">systemctl start firewalld //开启为start关闭则改为stop</span><br><span class="line">firewall-cmd --zone=public --add-port=80/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br><span class="line">firewall-cmd --list-ports</span><br></pre></td></tr></table></figure><blockquote><p>防火墙其他常用命令</p><blockquote><p>firewall-cmd –state                          ##查看防火墙状态，是否是running<br>firewall-cmd –reload                          ##重新载入配置，比如添加规则之后，需要执行此命令<br>firewall-cmd –get-zones                      ##列出支持的zone<br>firewall-cmd –get-services                    ##列出支持的服务，在列表中的服务是放行的<br>firewall-cmd –query-service ftp              ##查看ftp服务是否支持，返回yes或者no<br>firewall-cmd –add-service=ftp                ##临时开放ftp服务<br>firewall-cmd –add-service=ftp –permanent    ##永久开放ftp服务<br>firewall-cmd –remove-service=ftp –permanent  ##永久移除ftp服务<br>firewall-cmd –add-port=80/tcp –permanent    ##永久添加80端口<br>firewall-cmd –remove-port=80/tcp –permanent    ##永久移除80端口<br>firewall-cmd –zone=public –list-ports       ##查看已开放的端口</p></blockquote></blockquote></li></ol><h3 id="服务器nginx配置"><a href="#服务器nginx配置" class="headerlink" title="服务器nginx配置"></a>服务器nginx配置</h3><ul><li>首先在home路径中建立www然后进入www再创建website目录 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /home</span><br><span class="line">mkdir www</span><br><span class="line">cd www</span><br><span class="line">mkdir website</span><br></pre></td></tr></table></figure></li><li>进入nginx目录修改nginx.conf文件,将server 80 端口下的root项改为 /home/www/website  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/nginx/conf</span><br><span class="line">vi nginx.conf</span><br></pre></td></tr></table></figure> <img src="https://wx2.sbimg.cn/2020/08/05/oDUsM.png" alt="编辑nginx.conf文件">  <h3 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h3> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ~</span><br><span class="line">curl -sL https://rpm.nodesource.com/setup_10.x | bash -</span><br><span class="line">yum install -y nodejs</span><br></pre></td></tr></table></figure><h4 id="检查是否安装成功"><a href="#检查是否安装成功" class="headerlink" title="检查是否安装成功"></a>检查是否安装成功</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><img src="https://wx2.sbimg.cn/2020/08/05/oPu6G.png" alt="安装检查">  <h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><div class="note info modern"><p>全程依旧使用yum命令安装Git，安装期间提示y/s一律选择yes</p></div></li></ul><ol><li>安装Git及新建Git用户 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum install git</span><br><span class="line">git --version</span><br><span class="line">adduser git</span><br><span class="line">chmod 740 /etc/sudoers</span><br><span class="line">vi etc/sudoers</span><br></pre></td></tr></table></figure></li><li>在打开的sudoers中如图片所在位置添加以下内容 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git ALL=(ALL)ALL</span><br></pre></td></tr></table></figure> <img src="https://wx2.sbimg.cn/2020/08/05/oPqbw.png" alt="在sudoers中添加语句">  </li><li>执行以下指令更改文件夹权限，切换git用户并建立密钥  <div class="note warning modern"><p>这里的步骤至关重要！！！</p></div> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">chmod 400 /etc/sudoers</span><br><span class="line">sudo passwd git</span><br><span class="line">su git</span><br><span class="line">cd ~</span><br><span class="line">mkdir .ssh</span><br><span class="line">cd .ssh</span><br><span class="line">vi authorized_keys</span><br><span class="line">chmod 600 ~/.ssh/authorized_keys</span><br><span class="line">chmod 700 ~/.ssh</span><br></pre></td></tr></table></figure> <img src="https://wx1.sbimg.cn/2020/08/07/ogtC6.png" alt="建立密钥"><br> <img src="https://wx2.sbimg.cn/2020/08/07/ogwLO.png" alt="加权限">  </li><li>创建git仓库且添加钩子文件 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ~</span><br><span class="line">git init --bare blog.git</span><br><span class="line">vi ~/blog.git/hooks/post-receive</span><br></pre></td></tr></table></figure></li><li>在post-receive中输入 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --work-tree=/home/www/website --git-dir=/home/git/blog.git checkout -f</span><br></pre></td></tr></table></figure></li><li>保存退出给文件加权限 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x ~/blog.git/hooks/post-receive</span><br></pre></td></tr></table></figure><div class="note warning modern"><p>注意以上指令都需在git用户下执行，若中途断开需重新执行su git指令进入git账户！！</p></div></li><li>在之前root用户中新建的/home/www/website文件夹中添加文件权限 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su root</span><br><span class="line">chmod 777 /home/www/website</span><br><span class="line">chmod 777 /home/www</span><br></pre></td></tr></table></figure></li><li>切换到本地电脑，在本地git窗口中输入 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -o StrictHostKeyChecking=no git@你的服务器地址</span><br></pre></td></tr></table></figure><div class="note info modern"><p>返回结果如下则成功！</p></div><img src="https://wx2.sbimg.cn/2020/08/07/ogHXD.png" alt="返回结果"><h2 id="本地配置文件修改"><a href="#本地配置文件修改" class="headerlink" title="本地配置文件修改"></a>本地配置文件修改</h2></li></ol><ul><li>修改hexo目录下的_config.yml文件  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">repo: git@服务器地址:/home/git/blog.git</span><br></pre></td></tr></table></figure><img src="https://wx2.sbimg.cn/2020/08/07/oga9n.png" alt="修改配置文件"></li></ul><h3 id="编写nginx启动脚本"><a href="#编写nginx启动脚本" class="headerlink" title="编写nginx启动脚本"></a>编写nginx启动脚本</h3><p> 在/etc/init.d/路径下添加以下脚本文件，名称改为nginx </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#Startup script for the nginx Web Server</span><br><span class="line">#chkconfig: 2345 85 15</span><br><span class="line">nginx=/usr/localinx/sbininx</span><br><span class="line">conf=/usr/localinx/confinx.conf</span><br><span class="line">case $1 in </span><br><span class="line">start)</span><br><span class="line">echo -n &quot;Starting Nginx&quot;</span><br><span class="line">$nginx -c $conf</span><br><span class="line">echo &quot; done.&quot;</span><br><span class="line">;;</span><br><span class="line">stop)</span><br><span class="line">echo -n &quot;Stopping Nginx&quot;</span><br><span class="line">killall -9 nginx</span><br><span class="line">echo &quot; done.&quot;</span><br><span class="line">;;</span><br><span class="line">test)</span><br><span class="line">$nginx -t -c $conf</span><br><span class="line">echo &quot;Success.&quot;</span><br><span class="line">;;</span><br><span class="line">reload)</span><br><span class="line">echo -n &quot;Reloading Nginx&quot;</span><br><span class="line">ps auxww | grep nginx | grep master | awk &#x27;&#123;print $2&#125;&#x27; | xargs kill -HUP</span><br><span class="line">echo &quot; done.&quot;</span><br><span class="line">;;</span><br><span class="line">restart)</span><br><span class="line">$nginx -s reload</span><br><span class="line">echo &quot;reload done.&quot;</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">echo &quot;Usage: $0 &#123;start|restart|reload|stop|test|show&#125;&quot;</span><br><span class="line">;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><h3 id="为nginx启动脚本添加权限"><a href="#为nginx启动脚本添加权限" class="headerlink" title="为nginx启动脚本添加权限"></a>为nginx启动脚本添加权限</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x nginx</span><br></pre></td></tr></table></figure><h3 id="脚本控制命令"><a href="#脚本控制命令" class="headerlink" title="脚本控制命令"></a>脚本控制命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">service nginx start  //启动</span><br><span class="line">service nginx stop   //停止</span><br><span class="line">service nginx reload  //重启</span><br></pre></td></tr></table></figure><p><img src="https://wx1.sbimg.cn/2020/08/07/ognCa.png" alt="命令执行效果">  </p><h1 id="hexo常用命令"><a href="#hexo常用命令" class="headerlink" title="hexo常用命令"></a>hexo常用命令</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo deploy</span><br><span class="line">git pull </span><br></pre></td></tr></table></figure><div class="note success modern"><p>至此搭建完成，可以开始编写自己的博客内容了<del>~</del></p></div>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阿里云 </tag>
            
            <tag> 建站 </tag>
            
            <tag> hexo </tag>
            
            <tag> centos7 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>建站的第一篇文章</title>
      <link href="/13095.html"/>
      <url>/13095.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="本博客用阿里云-hexo搭建"><a href="#本博客用阿里云-hexo搭建" class="headerlink" title="本博客用阿里云+hexo搭建"></a>本博客用阿里云+hexo搭建</h1><p>实话实说搭建起来挺简单的，就莫名其妙会多很多很多小问题，过几天出个教程文章哈哈哈哈</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hello God-x Blog </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
